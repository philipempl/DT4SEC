<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Unsupervised and incremental learning orchestration for cyber-physical security</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Henrik</forename><forename type="middle">A</forename><surname>Lúcio</surname></persName>
						</author>
						<author>
							<persName><surname>Reis</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">TET/PPGEET</orgName>
								<orgName type="laboratory">Laboratório MídiaCom</orgName>
								<orgName type="institution">Universidade Federal Fluminense</orgName>
								<address>
									<settlement>Niterói</settlement>
									<region>/RJ</region>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Andrés</forename><surname>Murillo Piedrahita</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universidad de los Andes</orgName>
								<address>
									<settlement>Bogotá</settlement>
									<country key="CO">Colombia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Sandra</forename><surname>Rueda</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universidad de los Andes</orgName>
								<address>
									<settlement>Bogotá</settlement>
									<country key="CO">Colombia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Natália</forename><forename type="middle">C</forename><surname>Fernandes</surname></persName>
							<idno type="ORCID">0000-0001-9481-6374</idno>
							<affiliation key="aff0">
								<orgName type="department">TET/PPGEET</orgName>
								<orgName type="laboratory">Laboratório MídiaCom</orgName>
								<orgName type="institution">Universidade Federal Fluminense</orgName>
								<address>
									<settlement>Niterói</settlement>
									<region>/RJ</region>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><roleName>Laboratório</roleName><forename type="first">Dianne</forename><forename type="middle">S V</forename><surname>Medeiros</surname></persName>
							<idno type="ORCID">0000-0002-0361-5903</idno>
							<affiliation key="aff0">
								<orgName type="department">TET/PPGEET</orgName>
								<orgName type="laboratory">Laboratório MídiaCom</orgName>
								<orgName type="institution">Universidade Federal Fluminense</orgName>
								<address>
									<settlement>Niterói</settlement>
									<region>/RJ</region>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Marcelo</forename><surname>Dias De Amorim</surname></persName>
							<affiliation key="aff2">
								<orgName type="laboratory">LIP6</orgName>
								<orgName type="institution" key="instit1">CNRS</orgName>
								<orgName type="institution" key="instit2">Sorbonne Universités</orgName>
								<address>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Diogo</forename><forename type="middle">M F</forename><surname>Mattos</surname></persName>
							<idno type="ORCID">0000-0002-1279-7366</idno>
							<affiliation key="aff0">
								<orgName type="department">TET/PPGEET</orgName>
								<orgName type="laboratory">Laboratório MídiaCom</orgName>
								<orgName type="institution">Universidade Federal Fluminense</orgName>
								<address>
									<settlement>Niterói</settlement>
									<region>/RJ</region>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">MídiaCom -TET/PPGEET</orgName>
								<orgName type="institution">Universidade Federal Fluminense</orgName>
								<address>
									<settlement>Niterói/RJ</settlement>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="laboratory">Conselho Nacional de Desenvolvimento Científico e Tecnológico; Coordenação de Aperfeiçoamento de Pessoal de Nível Superior; Fundação Carlos Chagas Filho de Amparo à Pesquisa do Estado do Rio de Janeiro; Rede Nacional de Pesquisa</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Unsupervised and incremental learning orchestration for cyber-physical security</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1002/ett.4011</idno>
					<note type="submission">Received: 19 October 2019 Revised: 6 March 2020 Accepted: 4 May 2020</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.2" ident="GROBID" when="2021-06-09T12:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CIP, Common Industrial Protocol</term>
					<term>CPS, cyber-physical system</term>
					<term>DoS, denial-of-service</term>
					<term>IED, intelligent electronic device</term>
					<term>LIT, level indicator transmitter</term>
					<term>PLC, programmable logic controller</term>
					<term>RTU, remote terminal unit</term>
					<term>SCADA, supervisory control and data acquisition</term>
					<term>SGD, stochastic gradient descent</term>
					<term>SVM, support vector machine</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Attacks on cyber-physical systems, such as nuclear and water treatment plants, have physical consequences that impact the lives of thousands of citizens. In such systems, it is mandatory to monitor the field network and detect potential threats before a problem occurs. This work proposes a hybrid approach that orchestrates unsupervised and incremental learning methods to detect threats that impact the control loops in a plant. We use online data processing to identify new attack vectors. We train the online incremental learning method as new attacks arrive. We also apply a one-class support vector machine to each monitored sensor or actuator to retrieve abnormal behaviors of their closed control loop. The proposed solution orchestrates the outputs from the two machine learning methods and alerts the system operators when it detects a threat. We evaluate the proposal on the Secure Water Treatment testbed dataset, and the results reveal that our proposal detects threats at more than 90% precision and with accuracy higher than 95%.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Cyber-physical systems (CPSs) are widely distributed, large-scale heterogeneous systems in which sensors, actuators, programmable logic controllers (PLCs), and other elements form a network to measure and control a physical system. <ref type="bibr" target="#b0">[1]</ref><ref type="bibr" target="#b1">[2]</ref><ref type="bibr" target="#b2">[3]</ref> The critical characteristic of CPS requires to integrate ubiquitous computing, efficient network communication, and control in physical processes. <ref type="bibr" target="#b3">4</ref> As any critical networked system, CPSs are prone to security vulnerabilities that may imply severe economic losses or social disorder. <ref type="bibr" target="#b4">5</ref> The typical architecture of a CPS is shown in Figure <ref type="figure">1</ref>.</p><p>Two key challenges to assure the operational and security goals of a CPS are to anticipate the threats and to identify anomalous behaviors of the physical system in both field and supervisory networks. Machine learning techniques compose a promising solution to address these issues. Machine learning techniques are cost-efficient to CPS since they outsource the network behavior analysis to powerful computer resources instead of deploying security on resource-restricted Industrial Internet of Things devices. <ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7</ref> Nevertheless, although attacks against CPS are a reality nowadays, there are only a few available datasets describing physical or cyber attacks-and such datasets are required to train the learning system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F I G U R E 1</head><p>The traditional architecture of a CPS. Sensors and actuators communicate with control devices through the field network, constituting the physical infrastructure. The control center communicates with the physical infrastructure using a private network, which, in turn, interfaces with the proposed machine learning-based threat detection system As a consequence, the development of security solutions is hindered. Moreover, each CPS has its particularities, which hardens, even more, the design of effective security countermeasures.</p><p>In this article, to circumvent the lack of data, we propose the use of a high-interaction honeypot to gather attack data targeting the CPS infrastructure. We reproduce the expected behavior of the honeypot using the Secure Water Treatment (SWaT) testbed dataset. <ref type="bibr" target="#b7">8</ref> To this end, we split the SWaT testbed dataset, originating a honeypot-like dataset and a regular CPS traffic dataset. The SWaT testbed is a fully operational scaled-down water-treatment plant. It is designed and built for research on the design of secure CPSs. The water treatment process on SWaT consists of six distinct subprocesses, and each one is independently controlled by a PLC. The plant control relies on the system estimated state derived from the PLC sensors. The SWaT dataset contains sensors, actuators, and network traffic of the entire SWaT testbed for a total of 11-days nonstop activity. The dataset encloses 36 labeled cyber and physical attacks against the testbed. As the testbed is a closed, controlled environment, all data are trustworthy, and no unlabeled attack runs simultaneously in the testbed. The dataset includes 53 attributes. The fundamental motivation to base the article on the SWaT dataset is because it is the most up-to-date and complex public-available dataset on securing CPSs. <ref type="bibr" target="#b8">9</ref> With such data in hand, we propose to apply unsupervised and incremental machine learning techniques to detect threats. Our proposal orchestrates both zero-day threat detection through honeypot data analysis and anomaly detection through pattern discovery on regular CPS traffic. The performed analysis considers a honeypot-like dataset obtained from the SWaT testbed dataset. The key contribution of the paper is the orchestration between distinct machine learning techniques. The novelty of this article is using selection of classifiers to decide whether the one-class SVM classification is reasonably trustworthy. We weight the distance of a sample to the decision surface against the distance of the same sample on the incremental SVM. We introduce the idea of a single classifier that consumes data from a honeypot and incrementally retrains itself. We also deploy several instances of a one-class classifier, one for each PLC. The background idea of the proposal is that the one-class classifiers are specialized on the behavior of each subprocess. Thus, the one-class classifiers look for misbehaviors, or anomalies, on each subprocess. The incremental SVM avoids the catastrophic forgetting caused by the retraining of classifiers since it learns new attack behaviors from the publicly accessible honeypot. Learning from an openly available honeypot empowers the proposal on learning recently launched further threats, also called zero-day threats. The trained incremental classifier discriminates incoming traffic from the private network of the protected CPS, as well as it enhances the training with each new sample. The proposed orchestration of learning methods generates alerts whenever either the incremental learning or the one-class classifier emits a threat classification. Our results show that the proposed machine learning orchestration achieves an accuracy of at least 95% and detects threats with a precision of more than 90%. The key findings of this article are summarized as follows.</p><p>• The deployment of classifiers that specialize in each subprocess of the CPS is fundamental, as each subprocess is essentially different from the other and may suffer different types of attacks;</p><p>• The analysis of physical parameters only achieves high accuracy, as observed in the evaluation of the one-class SVM classifier for detecting deviations from the normal behavior of the physical processes. Nevertheless, analysis of both network and physical parameters achieves higher accuracy, as shown in the assessment of the incremental SVM classifier. Thus, considering both types of parameters as features of a machine-learning mechanism for threat detection most likely improves the performance of the mechanism;</p><p>• The mitigation of zero-day attacks in CPS is necessary to avoid potential catastrophes due to the incorrect operation of the system. Hence, the deployment of honeypots to gather attack data and learn recently launched attacks is essential. Not least, a critical system as a CPS must also mitigate known attacks. It is, then, mandatory to orchestrate different strategies able to detect both old and recently launched threats, assuring a high level of safety on the operation of a CPS;</p><p>• The use of small time-windows to analyze data reduces latency on reacting to attacks but can miss an ongoing attack.</p><p>In turn, long time-windows increase latency, but most likely comprise sufficient information to train the classifier. Hence, the size of the time window must be well-defined, aiming to reduce latency on reacting to attacks while keeping enough information to promptly train the classifier and improve the performance of the next step.</p><p>This article is organized as follows. Section 2 discusses attacks performed against CPSs. Section 3presents our proposed machine-learning-based approach to discriminate traffic in a CPS. In Section 4, we evaluate our proposal via a case study and discuss the obtained results. Section 5 reviews related work. Finally, Section 6 concludes this article and discusses future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">ATTACKS AGAINST CPSS</head><p>In CPS context, a physical attack refers to a malicious action over a physical component. At the same time, a cyber-attack intends to disrupt the system operation by using a malicious program to compromise the network. Currently, most cyber-physical attacks fall under one of three classes, namely, denial-of-service (DoS), replay, and deception attacks. <ref type="bibr" target="#b0">1</ref> Cyber-physical attacks exploit various vulnerabilities from different attack vectors, such as vulnerabilities on the communication of smart things, <ref type="bibr" target="#b9">10</ref> on the sensor networking, <ref type="bibr" target="#b10">11</ref> on the operating system or control devices configuration errors, and stolen digital certificates. Moreover, attackers rely on recently discovered vulnerabilities to perform previously unseen attacks against the CPS to avoid detection from an intrusion detection system. Previously unseen attacks on recently discovered vulnerabilities are called zero-day attacks and are dangerous for critical infrastructures because their behaviors are unknown and, thus, it hardens the detection. <ref type="bibr" target="#b11">12</ref> For these reasons, the correct operation of a CPS depends on its ability to anticipate threats and identify anomalous behaviors in both field and supervisory networks, before an attack happens. It is then necessary to gather enough information to extract knowledge and to build an appropriate protection strategy.</p><p>A typical start point for an attack is the Supervisory Control and Data Acquisition (SCADA) systems. Most of the standards, such as DNP3, Modbus, and MMS, are usually deployed without proper cyber-security precautions. Currently, there are numerous examples of attacks against each of these protocols. New possibilities also arise in protection schemes that allow communications between intelligent electronic devices using protocols such as GOOSE and sample value (SV). Other possibilities include targeting the attack on known vulnerabilities of control software or firmware of specific vendors.</p><p>Unfortunately, when operational teams discover attack footprints, they do not disclose the events and their pieces of evidence, to avoid new attempts against the infrastructure as well as losses in financial markets. Moreover, when new forms of attacks arise, the CPS remains vulnerable until the release of a firmware update for the automation system devices.</p><p>A compelling approach to address both the lack of reference data and the exposure of CPS to attacks is through the use of honeypots. Honeypots can potentially generate a large amount of data that can be analyzed to extract knowledge about new attacks and new attack behaviors. <ref type="bibr" target="#b11">12</ref> They constitute an established technique to deceive and entrap attackers; its adoption in the context of CPSs is quite natural. In a nutshell, honeypots must look like the real infrastructure and be able to control devices and interfere in the system state. The idea is to capture malicious behaviors through high-interaction honeypot applications that attract attackers. <ref type="bibr" target="#b12">13</ref> The high-interaction characteristic is important to deceive the attacker, as time constraints exist in the CPS context. In order to guarantee entrapment, the honeypot must run in a network that is physically isolated from the private control network of the physical systems. Other proposals seek to identify anomalies in the control loops of the CPSs through the inference of the probability distribution of each operation, the calculation of similarity between samples, and the adoption of machine learning mechanisms, such as the k-means clustering algorithm, and adaptive learning to infer normal behavior patterns.</p><p>Cyber-physical infrastructures also suffer from attacks found in other systems, such as the replay attack. In the replay attack, the attacker harms the system by hijacking the sensors, recording their readings for some time, and repeating the readings to the operator. As the replay values are statistically identical to the correct measurements, it is difficult to identify the attack using the classical estimation, control, and failure detection strategy. <ref type="bibr" target="#b13">14</ref> It is noteworthy that replay attacks differ from a false-data injection attack because, in the former, the attacker requires no knowledge of the system model dynamics. <ref type="bibr" target="#b14">15</ref> Moreover, the data in the injection attack can be substantially different from the original, revealing itself to the monitoring system as an anomaly. <ref type="bibr" target="#b14">15</ref> During an attack against a cyber-physical infrastructure (or due to a real failure), the control network shows abnormal behavior. It is, in general, challenging to determine whether the problem origin comes from a device or the network. Hence, both the communication network and the physical infrastructures must be monitored.</p><p>Finally, a CPS needs to operate 24 h/day and 365 days/year. Thus, network security measures cannot disturb CPS operations by introducing delays due to the use of resource-consuming cryptographic solutions or retarding the actuation of a device due to authentication processes or intrusion detection systems analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">UNSUPERVISED AND INCREMENTAL LEARNING FOR CYBER-PHYSICAL THREAT DETECTION</head><p>Detecting threats in CPSs is challenging, as it is necessary to analyze specific features in data coming from both the communication network and sensors/actuators. <ref type="bibr" target="#b15">16</ref> Modeling such a system with a finite automaton is impractical because the number of states tends to explode. Thus, it is impractical to run a monolithic model that encompasses both the communication network and sensors/actuators. Machine-learning-based models are serious candidates as these models learn patterns from the data. <ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b17">18</ref> In this work, we identify threats in a CPS through a dual analysis of the communication network and physical sensors' monitored data. The communication network data represent the cyber features, bringing information about protocols and applications running on the system. The physical data consists of the sensor measurements and actuator commands extracted from the application data in the packets. We orchestrate two machine learning strategies, incremental learning and unsupervised one-class classification, as shown in Figure <ref type="figure">2</ref>. The incremental learning component implements an online mechanism to learn from previously unknown attacks. The unsupervised one-class classification, in turn, is an offline solution that focuses on detecting anomalies in the data. The problem of unsupervised classification is complex, as the monitored data patterns are not known a priori. <ref type="bibr" target="#b23">24</ref> In a nutshell, the incremental classifier seeks for zero-day threats on the real CPS. In contrast, the one-class device-based classifier seeks for control loop deviation for each physical process. Thus, our proposal monitors both cyber-attacks based on zero-day threats and sabotage on physical processes due to a deviation of the control loop. In Figure <ref type="figure">2</ref>, the Orchestration module composes both predictions from incremental SVM and each device-based one-class SVM. The key idea of the orchestration is to provide a single prediction on each sample of the CPS execution. Thus, the orchestration consists of weighting the online and offline learning results. The orchestration between the distinct results between the incremental SVM and the one-class SVM of a given sensor follows the maximum distance between the sample and the hyperplane. Indeed, the classifier that presents the maximum distance between the sample and the decision function decides the final classification of the sample. The final classification of the sample,  final , is given by</p><formula xml:id="formula_0"> final =  on × ⌊ on ⋅ −1 off ⌋ max ( ⌊ on ⋅ −1 off ⌋, 1 ) +  off × ⌊ −1 on ⋅ off ⌋ max ( ⌊ −1 on ⋅ off ⌋, 1 ) , (<label>1</label></formula><formula xml:id="formula_1">)</formula><p>where on is the distance between the sample and the decision hyperplane of the online learning algorithm, off is the distance between the sample and the decision hyperplane of the offline learning algorithm, and  on and  off are binary variables for the online and offline classifiers, respectively. The online learning module classifies a sample as a threat setting  on = 1, while the offline learning module classifies it setting  off = 1. Equation ( <ref type="formula" target="#formula_0">1</ref>) is agnostic to the algorithm be incremental or one-class, as long as the classification result is given in terms of a binary variable. As shown in Figure <ref type="figure">2</ref>, the online learning module implements the incremental SVM algorithm, and the offline learning module implements the one-class SVM algorithm.</p><p>As an example of how the proposal works to determine the final classification of a sample, let a device in the physical infrastructure be embedded with a sensor  1 . Samples from  1 are analyzed by both the online and the offline learning modules. The offline learning module, running the one-class SVM algorithm, classifies the sample as "not a threat" ( on = 0) and the distance to the hyperplane is off = 0.1. In turn, the online learning module, running the incremental SVM algorithm, classifies the sample as "threat" ( off = 1) and the distance to the hyperplane is on = 0.9. Based on Equation (1), the orchestration module determines the final classification. In this example,  final = 1 and the sample is classified as "threat." It is worth to note that if on = off , the sample is always classified as "threat."</p><p>It is important to highlight that our proposed approach is agnostic to the CPS purpose. It may be applied to any CPS since the machine learning modules only consume the generated log samples of each sensor on the CPS network. Therefore, the relationship between the machine learning modules and the CPS sensors is log consumption. The log entries of each sensor generate the CPS behavioral model and enable the detection of changes in the normal behavior of the system. As the proposal focuses on identifying abnormal changes in the sensed measurements, our approach fits to detect attacks against the data integrity, against the physical environment, and also attacks on the communication network between sensors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Honeypots and incremental learning</head><p>One of the challenges we face is that there are very few datasets available to train the machine learning models. Furthermore, the ones available are either synthetic or contain just a few samples. To overcome this limitation, we propose to use a honeypot that emulates the real topology to gather abnormal data. As the honeypot is not intended to offer any legitimate public service, it is safe to assume that all interactions come from malicious or curious users. Either way, we consider that the honeypot attracts unwanted activities exclusively. The honeypot must run on public, vulnerable IP addresses, and we assume as ground-truth that all traffic on the honeypot is considered illegitimate. Thus, we analyze it as threat behavior.</p><p>We reproduce the behavior of the honeypot using the SWaT testbed dataset, considering part of its data as the honeypot traffic. To achieve a honeypot-like dataset, we fragment the attacks on the SWaT testbed into small batches that simulate attacks on a honeypot that mimics the real CPS network. The honeypot traffic feeds an incremental learning classifier as a labeled dataset of threats. The incremental learning mechanism updates its learning parameters to identify new cyber-attacks. We adopt the incremental version of the support vector machine (SVM) with the incremental step based on the stochastic gradient descent (SGD). The SVM is a binary classifier based on a decision hyperplane that defines the class boundaries. A hyperplane built in a multidimensional space divides the data. The incremental SVM algorithm uses a smooth margin approach with the hinge loss, a convex function that is not differentiable, but it has subgradients. Thus, the basic SGD algorithm searches for the optimal maximal margin of separability between classes. The SVM is a particularly useful linear predictor for high-dimensional feature spaces, which represents a computationally complex learning problem. <ref type="bibr" target="#b15">16</ref> Moreover, the SGD algorithm is useful when the data are sparse and takes less than linear time and space per iteration to optimize a system. Therefore, the SVM predictor with an incremental SGD algorithm for optimizing the maximal separability margin well fits the need for an incremental learning method that does not introduce heavy computation resource requirements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Data, anomalies, and unsupervised learning</head><p>Besides the lack of data, some CPS protocols used within the EtherNet/IP stack rely on device-specific I/O messages that follow nonstandard formats of fixed lengths defined by the control system vendors. As these messages are nonstandardized, it becomes a challenge to develop a monitoring system based on machine learning that extracts knowledge from the network communication. In our proposal, the unsupervised one-class classification mechanism infers the probability distribution of the monitored data on each sensor or actuator in the field network. The key idea of inferring the normal behavior of the control data in the field devices derives from the predictability and closed-loop behavior of the control functions. As the field network is always generating data, from time to time, the one-class strategy updates the learning on normal behavior of the physical process. Any sample that does not fit inside the surface of the normal class is reported as an anomaly.</p><p>The one-class learning strategy relies on the one-class SVM method. The one-class SVM is an unsupervised learning algorithm that derives a decision hyperplane for anomaly detection. New data are classified as similar to or different from the training set. In contrast with typical SVM implementations, the one-class takes into consideration a training set of samples from a single class. Any new sample that does not fit into the decision surface defined by the training set is considered an instance of a new class and, thus, an anomaly. As the one-class is more susceptible to variations on the distribution of probabilities of the features, <ref type="bibr" target="#b18">19</ref> we model a classifier for each monitored sensor/actuator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Specific design choices</head><p>An essential step before data analysis is pre-processing, which refers to the organization of data in windows, the extraction of useful features, and the enrichment of the data. Both implemented learning strategies use fixed-duration time windows to organize data. The key idea of organizing data in windows is to evaluate instantaneous values as well as recent variations of features values, for example, the variation on the measure of a sensor is available when considering a set of recent measures of the sensor. Thus, means, variations, and counts of values on a time window are added to a sample from the network to enrich data. Considering the incremental learning strategy, we deploy a single classifier for the entire network, primarily focused on retrieving features that discriminate between cyber-attacks on the honeypot and the normal behavior of the infrastructure network. Thus, the incoming samples of the incremental learning component include network features, such as device identity, network protocol, type of messages, transport protocol, count of packets, and also physical-related features, such as Modbus message type, read/write information, register, and value. On the other hand, the one-class strategy applies a classifier per monitored device. It considers just features that express the physical state of the device, such as the value of each device register and recent variations of these values. This dual strategy of having different features in each classifier enables the monitoring of both physical and cyber threats.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CASE STUDY: WATER TREATMENT SYSTEM 4.1 Dataset</head><p>To evaluate our proposal, we use the SWaT dataset. <ref type="bibr" target="#b7">8</ref> This dataset comes from a realistic testbed representing a scaled-down version of a real-world industrial water treatment plant. The testbed has a six-stage filtration process corresponding to the physical and control components of the water treatment facility. The first stage stores raw water in a tank. The second stage pretreats water and assesses quality verifying if it is within acceptable limits. The third stage filters water to remove unwanted materials. The fourth stage dechlorinates water, and the fifth stage uses a reverse osmosis system to reduce inorganic impurities. The sixth stage stores water ready for distribution. Each stage has a dedicated PLC that communicates directly with the sensors and actuators of the specific stage, and with the SCADA server. In the tanks related to the first (raw water), third (filtering), and fourth (dechlorination) processes, there are level indicator transmitters (LITs), which are sensors to indicate the level of the water. The data in the SWaT testbed <ref type="bibr" target="#b7">8</ref> were collected for 11 days. The resulting dataset contains the physical properties of the plant and the water treatment process, as well as the network traffic, comprising a total of 946 722 samples. As the dataset authors assume that no severe attacks can be launched within less than one second, data collected from sensors and actuators are recorded once every second. The network traffic concerns the communication between the SCADA system and each PLC. A total of 36 types of attacks were launched against the testbed. Nevertheless, in the SWaT dataset, the only attack that involves both the network and the physical devices is the replay attack-for this reason, in our analyses, we focus on this specific attack.</p><p>The SWaT testbed relies on the EtherNet/IP protocol stack in the supervisory system networks and on the Fieldbus. 20 However, at each layer of the network, the encapsulated protocol is different. The Common Industrial Protocol (CIP) communicates devices in the control and supervisory network as well as in the Fieldbus network. Communication between controllers and sensors/actuators relies on device-specific I/O messages. The CIP stack meets three primary needs of CPSs: control, configuration, and data collection. CIP defines the application layer as an encapsulated and object-oriented protocol. CIP messages have rich semantics about information exchanged in the network, which helps understand the process and define the process-based machine learning models. CIP messages follow the object-oriented paradigm and allow the transmission of a variable number of data registers with distinct types. In the Fieldbus network of the SWaT testbed, device-specific I/O EtherNet/IP messages follow non-standard formats of fixed lengths defined by the vendor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Evaluation and results</head><p>We implement a prototype of the proposed machine learning approaches. Our prototype is written in Python and relies on the sklearn 1 library as the substrate for the learning algorithms. Because we use the SWaT dataset, we focus on the deployment and analysis of the machine learning methods, instead of implementation details of the field network or the honeypot. Hence, we use the honeypot-like dataset obtained from the complete SWaT testbed dataset to emulate the honeypot traffic. We establish as ground-truth that all traffic on the honeypot is malicious. In the SWaT dataset, attacks are discriminated by the hour of the day, and while an attack happens, attack flows and normal flows coexist.</p><p>We analyze the Modbus/TCP protocol to help us design the machine learning strategies. We engineer the following features: source and destination IP addresses, Modbus function code, eight registers of Modbus values, number of changes of the values of the register within a sampling window, and number of packets involved in the Modbus communication. We highlight that these features allow the detection of all attacks that unusually influence these features. As stated previously, we evaluate our proposal against a replay attack. In the SWaT dataset, the replay attacks consist of setting the value of a tank level measurement to a constant during a time interval. The immediate effect is the underflow or overflow of a tank, damaging the system and causing financial loss. In order to cause the overflow, for instance, the attacker captures a Modbus message indicating the tank volume when the tank starts to fill and continuously replays this message, indicating that the tank has a low volume when it is indeed being fulfilled. Hence, during the attack, the number of changes in the sensor measurement is constant, as shown in Figure <ref type="figure">3</ref>. We use the number of changes of the Modbus Register values as a primary feature for our attack detection proposal. Using these values as a feature of the machine learning model is the main reason for the incremental learning strategy to behave with high accuracy during the early stages. This happens because the attack differs from the remaining of the normal data previously collected.</p><p>We evaluate the performance of the two machine learning strategies using well-known metrics such as precision, accuracy, sensitivity, and specificity. Precision measures how many of the predicted true elements are indeed true. The accuracy is the fraction of the results correctly identified. The sensitivity is the fraction of true positives correctly identified. In turn, the specificity is the proportion of true negatives correctly identified.</p><p>Our first evaluation considers the performance of the one-class SVM on a device-based classification. We train a predictor of each sensor ("LIT x01" where x represents the tank of the corresponding process) in the field network. This</p><formula xml:id="formula_2">F I G U R E 3</formula><p>The key features on the identification of a replay attack are the value of the level sensor and the number of changes of this value within a window. The number of changes of the level sensor within a sampling window is constant while the replay attack happens</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F I G U R E 4</head><p>The performance metrics for the one-class SVM. We show the results for the three sensors and the system as a whole. The low sensitivity associated with high accuracy and precision indicates that some attacks perform very close to normal behavior assures that the SVM decision surface represents the expected behavior for each sensor/actuator. Figure <ref type="figure">4</ref> shows the performance metrics for the attack class, for each sensor, and the average for the three sensors, represented by "System." The precision metric is always around 0.95, while the accuracy of the classifiers is upper-bounded at 0.80. This result is due to the low specificity of the classifiers. The primary reason for obtaining high precision while having low specificity is because the attacks introduce small physical changes while they last, but the dataset labels the entire period of the attack as belonging to the attack class. Therefore, as the period of normal behavior is labeled as an attack, the classifiers produce a false negative flow. Nevertheless, we highlight that the precision is high, almost 1.0 for the system as a whole, which means that the identified threats are, in fact, attacks for almost all alarms. The result reveals that one-class SVM is precise at finding anomalies, and, when it fails to detect the anomaly, there is no physical change in the monitored process.</p><p>The following experiment evaluates the incremental learning strategy. Figure <ref type="figure">5A</ref>,B shows the accuracy and the precision of the system as a function of time using three time-windows. From 0 to 10 seconds, there was no attack traffic on the honeypot-like dataset; as a consequence, incremental learning performs poorly. This is the bootstrap phase, in which it is learning the attacks. Hence, the accuracy and precision of the classifier are low (the classifier has not been trained with an attack sample yet). After the first batch of samples from the honeypot-like dataset, at 10 seconds, the behavior of the predictor changes, and it reaches more than 0.95 of precision and accuracy. It is noteworthy that accuracy is higher for the incremental SVM than for the one-class SVM, because the incremental considers features from the network, transport protocol, and monitored values on physical sensors/actuators. In contrast, the one-class SVM considers only the monitored values in the physical devices. Hence, it is advised to take into account both network and physical information when developing a solution to detect threats in CPS.</p><p>The incremental strategy learns both normal and abnormal behaviors from samples, while one-class only derives the normal behavior. Figure <ref type="figure">5</ref> also compares the time window size used to gather the samples. We highlight that a 1-second time window performs better than 2-or 3-second windows because it reduces the latency on reacting to attacks while keeping enough information to promptly train the classifier and improve the performance of the next step.</p><p>It is worth noting that the SVM incremental learner starts with no previous knowledge and, thus, it classifies and learns simultaneously. From 0 to 10s, there are no attacks on the honeypot, and the learner has no samples of the attack class. Hence, at the beginning of the test, the classification result is random, implying low accuracy and low precision </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F I G U R E 5</head><p>The performance metrics for the incremental SVM are closely related to the amount of attack traffic that is used as test samples, which is determined by the size of the time window. Before experiencing attacks on the honeypot, the system presents low accuracy (A) and low precision (B). As the attacks reach the honeypot, the system learns their behavior, shown at 20 seconds on the attack class. Nevertheless, as soon as new samples arrive at classifier, it learns the behavior of the attack class and discriminates against well-behaved and attack samples, resulting in high accuracy and high precision. The random initial classification and the high accuracy after a few samples is a typical behavior of the incremental learning techniques. <ref type="bibr" target="#b11">12</ref> Therefore, before applying the proposal on an operational scenario, there is the need to keep it on a learning stage. An alternative to the learning stage is to use a previous dataset to train the SVM classifier initially and, after, incrementally retrain it based on the honeypot data.</p><p>Considering both strategies on detecting intrusions on a CPS, we argue that the orchestration between incremental and one-class SVM approaches is essential to assure a high level of safety on the operation of a CPS. As there is no warranty that a new attack targets a honeypot, it is crucial to apply the one-class approach, which has a high precision rate detecting deviations from the normal behavior of the physical process. Also, the incremental SVM fed by the honeypot is mandatory to learn zero-day attack patterns and leads to the high accuracy of attack detection even when the attacks do not imply changes in physical parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RELATED WORK</head><p>Recent works proposed anomaly detection architectures on CPSs, and most of them evaluate their proposals over the SWaT testbed. <ref type="bibr" target="#b7">8</ref> Previous proposals focused on the CPS modeling <ref type="bibr" target="#b19">20</ref> or on the pattern extraction from the dataset. <ref type="bibr" target="#b15">16</ref> Ahmed et al propose a technique that uses the hardware characteristics of a sensor to create unique patterns to identify sensors and detect data integrity attacks in a CPS. <ref type="bibr" target="#b20">21</ref> The unique pattern fingerprinting is a function of noise in sensor measurements. The uniqueness is because of the randomness of the physical process and manufacturing imperfections of a device. The proposal runs signal processing, such as Kalman filter, to extract the noise from the measurements, and then apply a one-class SVM classification for attack detection. On the other hand, our proposal focuses on the sensors measurements to extract the sensor fingerprinting and, we also introduce the idea of orchestrating both one-class SVM with incremental learning from the honeypot.</p><p>Chen et al apply machine learning on sensor data to model invariant properties on the SWaT testbed. <ref type="bibr" target="#b21">22</ref> The authors claim that using machine learning, they overcome the challenge of constructing CPS models for detecting attacks. In contrast to our approach, Chen et al propose a supervised learning approach to train on sensor data, representing the well-behaved runs, and on attack traces representing misbehaved runs. However, the usage of the static dataset to train the model implies that the learned model is not able to detect a recently launched attack, that is, a zero-day attack. To overcome this limitation, we propose to consume data from a honeypot, where all interactions are supposed to be samples of misbehaviors. As the honeypot is publicly available, all the new attacks tend to be run first on the honeypot that is a digital twin of the protected CPS.</p><p>Kravchik and Shabtai survey on architectures of unsupervised deep neural networks (DNNs) aiming to detect cyber-attacks on the SWaT dataset. <ref type="bibr" target="#b15">16</ref> The authors identify that a one dimension convolutional neural network is able to efficiently detect anomalies and cyber-attacks in CPS, incurring a few false positives. The simple one-dimension convolutional neural network outperforms recurrent networks in the classic sequence prediction task. Besides, Inoue et al argue that DNNs perform slightly better than the one-class SVM on detecting anomalies on the SWaT scenario. <ref type="bibr" target="#b22">23</ref> The authors account for the better performance of the DNN against the one-class SVM to the tendency of the one-class SVM to classify any abrupt change in sensor values as anomalies, even when it is the normal behavior of the sensor. Thus, the authors evidence that the one-class SVM tend to detect more anomalies, but DNN tends to reduce the false-positive rates. They also conclude that both methods have difficulties detecting stealthy attacks, in which there is a gradual anomalous change on the sensor value. To circumvent the limitations, enlighten on the previous work, we consider the distance between each sample and the classification hyperplane. The distance between the sample and the hyperplane is the metric for orchestrating the classification between the incremental supervised SVM learner and the one-class unsupervised SVM learner. Our approach uses both learners to reduce the false positive rate from the one-class SVM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION AND FUTURE WORK</head><p>Applying machine learning algorithms to perform intrusion detection on real CPS is a challenging task. First, data used to train the classifiers must be curated appropriately, verifying that it includes not only normal operating conditions but also some conditions such as downtime caused by maintenance and even emergency stops on the CPS. Furthermore, during the data acquisition process, it is crucial to have the expertise of the CPS operators to label the events in the dataset correctly. Second, CPS systems tend to operate for several years, and the aging of the devices must be taken into consideration by the classifiers to avoid false positives. Finally, the latency of the classification system must be considered to ensure that the attack countermeasure is responsive enough. CPSs integrate ubiquitous computing, efficient network communication, and control in physical processes. Since CPSs are part of critical infrastructures, it is mandatory to assure the operational and safety goals of any given CPS. In this work, we investigated the deployment of a machine-learning approach for detecting malicious behaviors on the CPS network. Our approach orchestrates the detection of attacks learned from a honeypot-like dataset through an incremental learning SVM and anomaly detection on the measurements of the physical processes through a one-class SVM. Our results show that, for the SWaT testbed dataset, this approach reaches more than 0.95 of accuracy on detecting learned attacks and detects physical anomalies at more than 0.90 precision.</p><p>Although our use case was to apply the proposal in the scaled-down SWaT water treatment plant, the proposal remains scalable. The proposal involves classifiers that rely on linear kernel functions and, thus, introducing new monitored devices or sensors implies just a linear increase in the computation overhead.</p><p>Further work includes improving the false-positive rate of our classifier. Also, we intend to apply our detection system to other types of plants and industrial protocols. We also plan to address privacy-related questions about knowledge extracted from the CPS analytics and about leakage of the CPS topology information as an outcome for honeypot exploitation.</p><p>physical and network data. Our approach orchestrates the detection of attacks learned from a honeypot-like dataset through an incremental learning SVM, and anomaly detection on the measurements of the physical processes through a one-class SVM. We use SGD to address the computationally intense characteristic of the SVM algorithm. Our approach reaches high accuracy on the detection of learned attacks and high precision on the detection of physical anomalies for the SWaT testbed dataset. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ORCID</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>F</head><label></label><figDesc>I G U R E 2 Orchestration of two learning methods, incremental and one-class learning. A honeypot provides malicious activity data for the incremental SVM, which updates the classification parameters. Monitoring of the physical infrastructures provides normal-behavior samples for both one-class and incremental SVM. The orchestration generates alarms when any of the learning methods detect a new threat</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Natália C. Fernandes https://orcid.org/0000-0001-9481-6374 Dianne S. V. Medeiros https://orcid.org/0000-0002-0361-5903 Diogo M. F. Mattos https://orcid.org/0000-0002-1279-7366</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Available at https://scikit-learn.org/.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We would like to acknowledge CNPq, CAPES, FAPERJ, and RNP for the partial funding of this research. We would also like to warmly thank Álvaro Cárdenas from the University of California, Santa Cruz, USA, for his valuable contributions to this work.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONFLICT OF INTEREST</head><p>The authors declare no potential conflict of interests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>AUTHOR CONTRIBUTIONS</head><p>The contributions of this work are the following. We propose the use of a honeypot to gather data to be fed into a machine-learning-based threat detection system for a CPS. Although we do not implement a honeypot, we reproduce the behavior of the honeypot traffic using a real dataset from a dataset of a water treatment facility. We investigate the deployment of a machine-learning approach for detecting malicious behaviors on the CPS network, based on both</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A survey on security control and attack detection for industrial cyber-physical systems</title>
		<author>
			<persName><forename type="first">D</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q-L</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yang</forename><forename type="middle">X</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X-M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neurocomputing</title>
		<imprint>
			<biblScope unit="volume">275</biblScope>
			<biblScope unit="page" from="1674" to="1683" />
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Application of the fog computing paradigm to smart factories and cyber-physical systems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Brito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hoque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Steinke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Willner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Magedanz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans Emerg Telecommun Technol</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">e3184</biblScope>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">In quest of benchmarking security risks to cyber-physical systems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Amin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">A</forename><surname>Schwartz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hussain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Netw</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="19" to="24" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Privacy and performance trade-off in cyber-physical systems</title>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Netw</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="62" to="66" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Secure control: Towards survivable cyber-physical systems</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Cardenas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Amin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Paper presented at: Proceedings of the International Conference on Distributed Computing Systems Workshops</title>
				<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="495" to="500" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Cost Efficiency Optimization for Industrial Automation</title>
		<author>
			<persName><forename type="first">Hhr</forename><surname>Sherazi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Grieco</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Boggia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Imran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Next Industrial Revolution</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="141" to="171" />
			<publisher>John Wiley &amp; Sons</publisher>
		</imprint>
	</monogr>
	<note>Wireless Automation as an Enabler for the</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An agile and effective network function virtualization infrastructure for the Internet of Things</title>
		<author>
			<persName><forename type="first">Dmf</forename><surname>Mattos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">B</forename><surname>Velloso</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ocmb</forename><surname>Duarte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J Internet Serv Appl</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">6</biblScope>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A dataset to support research in the design of secure water treatment systems</title>
		<author>
			<persName><forename type="first">J</forename><surname>Goh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Adepu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">N</forename><surname>Junejo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mathur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Conference on Critical Information Infrastructures Security</title>
				<editor>
			<persName><forename type="first">G</forename><surname>Havarneanu</surname></persName>
			<persName><forename type="first">R</forename><surname>Setola</surname></persName>
			<persName><forename type="first">H</forename><surname>Nassopoulos</surname></persName>
			<persName><forename type="first">S</forename><surname>Wolthusen</surname></persName>
		</editor>
		<meeting>the International Conference on Critical Information Infrastructures Security<address><addrLine>Switzerland</addrLine></address></meeting>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="volume">2017</biblScope>
			<biblScope unit="page" from="88" to="99" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Effectiveness of association rules mining for invariants generation in cyber-physical systems</title>
		<author>
			<persName><forename type="first">K</forename><surname>Pal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Adepu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Goh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Paper presented at: Proceedings of the IEEE International Symposium on High Assurance Systems Engineering</title>
				<imprint>
			<publisher>IEEE</publisher>
			<biblScope unit="volume">2017</biblScope>
			<biblScope unit="page" from="124" to="127" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Beyond the smart things: towards the definition and the performance assessment of a secure architecture for the Internet of Nano-Things</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sicari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rizzardi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Piro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Coen-Porisini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Grieco</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput Netw</title>
		<imprint>
			<biblScope unit="volume">162</biblScope>
			<biblScope unit="page">106856</biblScope>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Leveraging fog computing and software defined systems for selective forwarding attacks detection in mobile wireless sensor networks</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Yaseen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Albalas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Jararwah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Al-Ayyoub</forename></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans Emerg Telecommun Tech</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">e3183</biblScope>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">An adaptive real-time architecture for zero-day threat detection</title>
		<author>
			<persName><forename type="first">Agp</forename><surname>Lobato</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Lopez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">J</forename><surname>Sanz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Cardenas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ocmb</forename><surname>Duarte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Pujolle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE International Conference on Communications (ICC)</title>
				<meeting>the IEEE International Conference on Communications (ICC)</meeting>
		<imprint>
			<biblScope unit="volume">2018</biblScope>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
	<note>Paper presented at</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Towards high-interaction virtual ICS honeypots-in-a-box</title>
		<author>
			<persName><forename type="first">D</forename><surname>Antonioli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">O</forename><surname>Tippenhauer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Workshop on Cyber-Physical Systems Security and PrivaCy (CPS-SPC)</title>
				<meeting>the ACM Workshop on Cyber-Physical Systems Security and PrivaCy (CPS-SPC)</meeting>
		<imprint>
			<biblScope unit="volume">2016</biblScope>
			<biblScope unit="page" from="13" to="22" />
		</imprint>
	</monogr>
	<note>Paper presented at</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Attack detection and identification in cyber-physical systems</title>
		<author>
			<persName><forename type="first">F</forename><surname>Pasqualetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Dörfler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Bullo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Automat Control</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="2715" to="2729" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Physical authentication of control systems: designing watermarked control inputs to detect counterfeit sensor outputs</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Mo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Weerakkody</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Sinopoli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Control Syst Mag</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="93" to="109" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Detecting cyber attacks in industrial control systems using convolutional neural networks</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kravchik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shabtai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Workshop on Cyber-Physical Systems Security and PrivaCy (CPS-SPC)</title>
				<meeting>the Workshop on Cyber-Physical Systems Security and PrivaCy (CPS-SPC)</meeting>
		<imprint>
			<biblScope unit="volume">2018</biblScope>
			<biblScope unit="page" from="72" to="83" />
		</imprint>
	</monogr>
	<note>Paper presented at</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A comprehensive survey on machine learning for networking: evolution, applications and research opportunities</title>
		<author>
			<persName><forename type="first">R</forename><surname>Boutaba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Salahuddin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Limam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J Internet Serv Appl</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">16</biblScope>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Thirty years of machine learning: The road to pareto-optimal wireless networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Hanzo</surname></persName>
		</author>
		<idno type="DOI">10.1109/comst.2020.2965856</idno>
		<ptr target="http://dx.doi.org/10.1109/comst.2020.2965856" />
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Surveys &amp; Tutorials</title>
		<imprint>
			<biblScope unit="page" from="1" to="1" />
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A survey on security threats and defensive techniques of machine learning: a data driven view</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vcm</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Access</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="12103" to="12117" />
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Attacking fieldbus communications in ICS: applications to the SWaT testbed</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">I</forename><surname>Urbina</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Giraldo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">O</forename><surname>Tippenhauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Cárdenas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Paper presented at: Proceedings of the Singapore Cyber-Security Conference (SG-CRC) 2016. 14 of Cryptology and Information Security Series</title>
				<imprint>
			<biblScope unit="volume">2016</biblScope>
			<biblScope unit="page" from="75" to="89" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Noise matters: using sensor and process noise fingerprint to detect stealthy cyber attacks and authenticate sensors in CPS</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">P</forename><surname>Mathur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Paper presented at: Proceedings of the 34th Annual Computer Security Applications ConferenceACSAC&apos; 18</title>
				<meeting><address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<biblScope unit="volume">2018</biblScope>
			<biblScope unit="page" from="566" to="581" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Learning from mutants: using code mutation to learn and monitor invariants of a cyber-physical system</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Poskitt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Paper presented at: Proceedings of the 2018 IEEE Symposium on Security and Privacy</title>
				<imprint>
			<biblScope unit="volume">2018</biblScope>
			<biblScope unit="page" from="648" to="660" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Anomaly detection for a water treatment system using unsupervised machine learning</title>
		<author>
			<persName><forename type="first">J</forename><surname>Inoue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yamagata</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">M</forename><surname>Poskitt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Paper presented at: Proceedings of the 2017 IEEE International Conference on Data Mining Workshops</title>
				<imprint>
			<publisher>ICDMW</publisher>
			<biblScope unit="volume">2017</biblScope>
			<biblScope unit="page" from="1058" to="1065" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An unsupervised approach to infer quality of service for large-scale wireless networking</title>
		<author>
			<persName><forename type="first">L H A</forename><surname>Reis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L C S</forename><surname>Magalhães</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D S V</forename><surname>De Medeiros</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D M F. ;</forename><surname>Mattos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lha</forename><surname>Reis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Murillo</forename><surname>Piedrahita</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rueda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename></persName>
		</author>
		<idno type="DOI">10.1002/ett.4011</idno>
		<idno>s10922-020-09530-3</idno>
		<ptr target="https://doi.org/10.1002/ett.4011" />
	</analytic>
	<monogr>
		<title level="j">Journal of Network and Systems Management</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">20</biblScope>
			<date type="published" when="2020" />
		</imprint>
	</monogr>
	<note>Trans Emerging Tel Tech</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
