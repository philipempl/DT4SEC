<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Secure Estimation of CPS with a Digital Twin</title>
			</titleStmt>
			<publicationStmt>
				<publisher>Springer International Publishing</publisher>
				<availability status="unknown"><p>Copyright Springer International Publishing</p>
				</availability>
				<date type="published" when="2020">2020</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Quanyan</forename><surname>Zhu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Zhiheng</forename><surname>Xu</surname></persName>
						</author>
						<title level="a" type="main">Secure Estimation of CPS with a Digital Twin</title>
					</analytic>
					<monogr>
						<title level="m">Advances in Information Security</title>
						<idno type="ISSN">1568-2633</idno>
						<idno type="eISSN">2512-2193</idno>
						<imprint>
							<publisher>Springer International Publishing</publisher>
							<biblScope unit="page" from="115" to="138"/>
							<date type="published" when="2020" />
						</imprint>
					</monogr>
					<idno type="DOI">10.1007/978-3-030-60251-2_9</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.2" ident="GROBID" when="2021-06-09T13:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Due to the increasing number of security-related incidents in CPSs, many researchers have studied the features of these attacks and developed relevant defense strategies. Among many attack models, we focus on data-integrity attacks, where the attackers modify the original data used by the system or inject unauthorized data to the system [110]. The data-integrity attacks can cause catastrophic consequences in CPSs. For instance, the fake data may deviate the system to a dangerous trajectory or make the system oscillate with a significant amplitude, destabilizing the system. Therefore, how to mitigate the impact of data-integrity attacks becomes a critical issue in the security design of CPSs.</p><p>One typical data-integrity attack for CPSs is the sensor-and-estimation (SE) attack, where the attackers tamper the sensing or estimated information of the CPSs [123]. Given the SE attack, Fawzi et al. [48]  have studied a SE attack and proposed algorithms to reconstruct the system state when the attackers corrupt less than half of the sensors or actuators. Pajic et al. [120]  have extended the attack-resilient state estimation for noisy dynamical systems. Based on Kalman filter, Chang et al.</p><p>[27] have extended the secure estimation of CPSs to a scenario in which the set of attacked nodes can change over time. However, to recover the estimation, the above work requires a certain number of uncorrupted sensors or a sufficiently long time. Those approach es might introduce a non-negligible computational overhead, which is not suitable for time-critical CPSs, e.g., real-time systems. Besides, since all the sensors do not have any protection, the attacker might easily compromise a large number of sensors, violating the assumptions of the above work.</p><p>Instead of recovering the estimation from SE attacks, researchers and operators also focus on attack detection [44]. However, detecting a SE attack could be challenging since the attackers' strategies become increasingly sophisticated. Using</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>the conventional statistic detection theory, e.g., Chi-square detection, may fail to discover an estimation attack if the attackers launch a stealthy attack <ref type="bibr">[111]</ref>. Chen et al. <ref type="bibr">[34]</ref> have developed optimal attack strategies, which can deviate the CPSs subject to detection constraints. Hence, the traditional detection theory may not sufficiently address the stealthy attacks in which the attackers can acquire the defense information. Besides, using classical cryptography to protect CPSs will introduce significant overhead, degrading the control performance of delay-sensitive CPSs <ref type="bibr">[178]</ref>.</p><p>The development of Digital Twin (DT) provides essential resources and environments for detecting sophisticated attacks. A DT could be a virtual prototype of a CPS, reflecting partial or entire physical processes <ref type="bibr">[99]</ref>. Based on the concept of DT, researchers have developed numerous applications for CPSs <ref type="bibr">[163]</ref>. The most relevant application to this chapter is using a DT to achieve fault detection <ref type="bibr">[18]</ref>. Similarly, we use the DT to monitor the estimation process, mitigating the influence of the SE attack.</p><p>In this chapter, we focus on a stealthy estimation attack, where the attackers know the defense strategies and aim to tamper the estimation results without being detected. Figure <ref type="figure">9</ref>.1 illustrates the underlying architecture of the proposed framework. To withstand the attack, we design a Chi-square detector, running in a DT. The DT connects to a group of protected sensing devices, collecting relevant evidence. We use cryptography (e.g., digital signature or message authentication code) to preserve the evidence from the attack. Hence, the DT can use the evidence to monitor the estimation of the physical systems. The cryptographic overhead will not affect physical performance since the execution of the real plant does not depend on the DT.</p><p>Different from the work <ref type="bibr">[27,</ref><ref type="bibr">48,</ref><ref type="bibr">120]</ref>, we have designed two independent channels, i.e., one is protected by standard cryptography, and the other one is the general sensing channel. Figure <ref type="figure">9</ref>.2 illustrates the structure of the framework. The main advantage of this structure is the cryptographical overhead will affect the The Architecture of the Framework: the Digital Twin has two channels to obtain the sensing information of the plant: one is secure, and the other is not secure. The secure channel provides less accurate data with a heavy computational overhead. DT only uses the secure channel to run the verification, and the computational overhead has negligible impact on the physical performance since these two channels are independent control performance of the physical system due to the independency between these two channels.</p><p>To analyze whether a stealthy attack can bypass DT's detector, we use game theory to find the optimal attack and defense strategies. Game theory has been an essential tool in designing security algorithms since we can use it to search for the optimal defense strategies against intelligent attackers <ref type="bibr">[101]</ref>. One related game model that can capture the detection issue is the Signaling Game (SG) <ref type="bibr">[151]</ref>. However, instead of using the SG, we use a Signaling Game with Evidence (SGE), presented in <ref type="bibr">[128]</ref>, to protect the system from the attack. In an SGE, the DT's detector will provide critical evidence to explore the stealthy attack. After integrating DT's detector with CPSs, we use an SGE to study the stealthy attack and develop optimal defense strategies based on the equilibria of the SGE. Our analytical results show that the stealthy attackers have to sacrifice the impact on the physical system to avoid detection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2">System Modelling and Characterization</head><p>In this section, we first introduce the dynamic model of a CPS. Secondly, we define a stealthy estimation attack model. Based on a Digital Twin (DT), we design a Chisquare detector to monitor the estimation process. Finally, we define a Signaling Game with Evidence (SGE) to characterize the features of the stealthy attack. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.1">System Model and Control Problem of a CPS</head><p>Suppose that the physical layer of a CPS is a control system. We assume that the control system can be linearized as a linear discrete-time system, given by</p><formula xml:id="formula_0">x k+1 = Ax k + Bu k + w k , (9.1) y k = Cx k + v k , (9.2)</formula><p>where k ∈ Z + is the discrete-time instant; x k ∈ R n x is the system state with an initial condition x 0 ∼ N (0 n x , Σ x ), and Σ x ∈ R n x ×n x is the covariance matrix; u k ∈ R n u is the control input; y k ∈ R n y is the sensor output; w k ∈ R n x and v k ∈ R n y are additive zero-mean Gaussian noises with covariance matrices Σ w and Σ v with proper dimensions; A, B, and C are constant matrices with proper dimensions. Given system model (9.1), we design a control policy μ : R n x → R n u by minimizing the following expected linear quadratic cost function, i.e.,</p><formula xml:id="formula_1">J LQG = lim N →∞ sup E 1 N N −1 k=0 x T k Qx k + u T k Ru k , (9.3)</formula><p>where Q ∈ R n x ×n x and R ∈ R n u ×n u are positive-definite matrices. Note that the controller cannot use state x k directly, i.e., we need to design an observer to estimate x k . Hence, minimizing function (9.3) is a Linear Regulator Gaussian (LQG) problem. According to the separation principle, we can design the controller and state estimator separately. The optimal control policy μ :</p><formula xml:id="formula_2">R n x → R n u is given by μ k (x k ) := K k x k , with K k := −(R + B T V k B)B T V k , (9.4)</formula><p>where V k ∈ R n x ×n x is the solution to the linear discrete-time algebraic Riccati equation <ref type="bibr">(9.5)</ref> and I n x ∈ R n x ×n x is an identity matrix. We assume that (A, B) is stabilizable. Then, V k will converge to a constant matrix V when k goes to infinity, i.e., lim</p><formula xml:id="formula_3">V k+1 = Q + A T V k (A − BK k ), with V 0 = I n x ,</formula><formula xml:id="formula_4">k→∞ V k = V , and lim k→∞ μ k (x) = μ(x) = Kx.</formula><p>In the next subsection, we will use a Kalman filter to estimate x k such that the controller (9.4) uses this estimated value to control the physical system. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.2">Kalman Filter Problem</head><p>To use controller (9.4), we need to design an estimator. Letx k ∈ R n x be the estimation of x k andê k :=x k − x k be the error of the estimation. Given the observation Y k−1 := {y 0 , y 1 , . . . , y k−1 }, we aim to solve the following Kalman filtering problem, i.e., min</p><formula xml:id="formula_5">x k ∈R nx ×nx E[(x k − x k ) T (x k − x k )|Y k−1 ]. (9.6)</formula><p>To solve (9.6), we need the following lemma, which characterizes a conditioned Gaussian distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 9.1 ( [122])</head><p>If a ∈ R n a , b ∈ R n b are jointly Gaussian with meansā,b and covariances Σ a , Σ b , and Σ ab = Σ T ba , then given b, distribution a is a Gaussian with</p><formula xml:id="formula_6">E[a|b] =ā + Σ ab Σ −1 b (b −b), Cov[a|b] = Σ a − Σ ab Σ −1 b Σ ba .</formula><p>To use Lemma 9.1, we define the covariance matrix ofê k aŝ</p><formula xml:id="formula_7">P k := E[ê kê T k |y k−1 ] = E[(x k − x k )(x k − x k ) T |y k−1 ], withP 0 = Σ x .</formula><p>Using the results of Lemma 9.1, we compute the optimal estimation iteratively, i.e.,x</p><formula xml:id="formula_8">k = A Kxk−1 +L k (y k−1 − Cx k−1 ), (9.7)</formula><p>where A K := (A + BK). Gain matrixL k ∈ R n x ×n y and covarianceP k ∈ R n x ×n x are updated usingL</p><formula xml:id="formula_9">k := A KPk C T (Σ v + CP k C T ) −1 , P k+1 := Σ w + (A K −L k C)P k A T K .</formula><p>Assuming that (A, C) is detectable, we can obtain that lim k→∞P k =P * , (9.8) whereP * ∈ R n x ×n x is a constant positive-definite matrix. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.3">Stealthy Estimation Attack</head><p>CPSs face an increasing threat in recent years. Numerous attack models for CPSs or networked control systems (NCSs) have been introduced in [165]. Among those attacks, one major attack is the data-integrity attack, where the attacker can modify or forge data used in the CPSs. For example, Liu et al. <ref type="bibr">[96]</ref> have studied a falsedata-injection attack that can tamper the state estimation in electrical power grids.</p><p>To mitigate the impact of a data-integrity attack on the state estimation, researchers have designed a Chi-square detector to monitor the estimation process. However, <ref type="bibr">Mo et al. [111]</ref> have analyzed stealthy integrity attack, which can pass the Chi-square detector by manipulating the perturbation of the injected data. Therefore, the main challenge is that the conventional fault detectors fail to protect the system from a stealthy attack. One real attack that can achieve the objective is the Advanced Persistent Threat (APT) <ref type="bibr">[160]</ref>, which can compromise a cyber system by executing a zero-day exploration to discover the vulnerabilities.</p><p>In our work, we consider an intelligent attacker who can launch a stealthy estimation attack to tamper the estimation results. Figure <ref type="figure">9</ref>.3 illustrates how the attacker achieves its objective. The attacker can either modify the data in the sensors or the data in the estimator. Besides tampering the estimation results, the attacker is also aware of the intrusion detector. The attacker can know the defense strategy and play a stealthy attack to remain unknown.</p><p>In the next subsection, based on the Digital Twin (DT), we design a cyber defender to withstand the stealthy estimation attack and discuss the benefits introduced by the DT. After presenting the game model, we will discuss the optimal defense strategies explicitly in Sect. 9.3. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.4">Digital Twin for the CPS</head><p>As mentioned above, an intelligent attacker can learn the defense strategy and launch a stealthy estimation attack, which can modify the estimation results without being detected by the conventional detector, e.g., a Chi-square detector. To resolve the issue, we aim to design an advanced detector based on a Digital Twin (DT). After that, we use a game-theoretical approach to develop an optimal defense strategy.</p><p>Given the system information, we design a DT with the following dynamics</p><formula xml:id="formula_10">x k = A Kxk−1 +L k (z k−1 − Dx k−1 ), (9.9) z k = Dx k + d k ,</formula><p>wherex k ∈ R n x is the DT's estimation of state x k ; z k ∈ R n z is the DT's observation; D ∈ R n z ×n x is a constant matrix, d k is a Gaussian noise with a covariance matrix</p><formula xml:id="formula_11">Σ d ∈ R n z .</formula><p>Similar to problem (9.6), we computeL k using the following iterations:</p><formula xml:id="formula_12">L k = A KPk D T (Σ d + DP k D T ) −1 , P k+1 = Σ w + (A K −L k D)P k A T F ,</formula><p>whereP 0 = Σ x andP k is defined bŷ</p><formula xml:id="formula_13">P k := E[(x k − x k )(x k − x k ) T |z k−1 ] = E[ẽ kẽ T k |z k−1 ].</formula><p>whereẽ k :=x k − x k is the DT's estimation error. We also assume that (A K , D) is detectable, i.e., we have lim k→∞P k =P * . (9.10) Figure <ref type="figure">9</ref>.4 illustrates the architecture of a CPS with a DT. We summarize the main differences between Kalman filter (9.7) and the DT's estimator (9.9) as follows. Firstly, the Kalman filter will use all available sensing information y k to obtain estimationx k . While the DT's estimator just uses a minimum sensing information z k ∈ R n z to predict x k as long as (A, D) is detectable, i.e., n y ≥ n z . This feature reduces the dimension of z k , making it easier to protect z k . Secondly, we do not require a high accuracy for z k , since we only use z k for attack detection. Hence, in general,P * andP * satisfy the condition that tr(P * ) ≤ tr(P * ), where tr(P ) is the trace of matrix P .</p><p>Thirdly, we do not use any cryptography to protect y k since the overhead introduced by the encryption scheme will degrade the performance of the physical system. However, we can use cryptography, such as Message Authentication Code (MAC) <ref type="bibr">[14]</ref> or Digital Signature (DS) <ref type="bibr">[106]</ref>, to protect the integrity of z k . The overhead caused by the cryptography will not affect the physical system because The CPS with a DT: the DT uses a secure observation z k to obtain an estimationx k ; giveñ x k , we use a Chi-square detector monitor estimation resultx k it depends on z k . Besides, we can put the DT into a supercomputer or a cloud to resolve the overhead issue.</p><p>To sum up, z k is an observation that is less accurate but more secure than y k . Given the distinct features of y k and z k , we use y k to estimate x k for the physical control and use z k for the detection in the DT. Given DT's estimator, we construct a Chi-square detector to monitor estimation resultx k at each time k. As illustrated in Fig. <ref type="figure">9</ref>.4, we build the detector in the DT by comparingx k andx k . The Chi-square detector generates a detection result q k ∈ Q := {0, 1, 2} at time k, where q k = 0 means the result is qualified, q k = 1 means the result is unqualified, q k = 2 means the result is detrimental. When q k = 2, the DT should always reject the estimation and send an alarm to the operators.</p><p>To design the detector, we define φ k :=x k −x k . Sincex k andx k are Gaussian distributions, φ k is a also Gaussian distribution with a zero-mean vector and a covariance matrix, i.e., φ ∼ N (0 n x , Σ φ ). Furthermore, we define that Then, χ 2 k follows a Chi-square distribution. We define a Chi-square detector as the following:</p><formula xml:id="formula_14">χ 2 k := (x k −x k ) T Σ −1 φ (x k −x k ). (<label>9</label></formula><formula xml:id="formula_15">q k = f q (m k ) := ⎧ ⎨ ⎩ 0, if χ 2 k ≤ ρ 1 ; 1, if χ 2 k ∈ (ρ 1 , ρ 2 ]; 2, if χ 2 k &gt; ρ 2 ;</formula><p>(9.12)</p><p>where ρ 1 , ρ 2 are two given thresholds, and they satisfy that ρ 2 &gt; ρ 1 &gt; 0; f q : R n x → Q is the detection function.</p><p>Using the above Chi-square detector, we can achieve fault detection. However, the work <ref type="bibr">[111]</ref> has shown that intelligent attackers can constrain the ability of the Chi-square detector by manipulating the amount of injected data. In the following subsection, we will introduce a stealthy sensor attack that aims to remain stealthy while modifying the estimation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2.5">General Setup of Signaling Game with Evidence</head><p>Due to the existence of attacks, the DT's might not be able to monitor the actual value estimation directly. Instead, the DT's can read a message provided by the estimator. According to our attack model, the attacker can compromise the estimator. Hence, the estimator can have two identities, i.e., a benign estimator or a malicious estimator. The DT aims to verify the estimator's identity by monitoring the estimation results. In Fig. <ref type="figure">9</ref>.5, we can view DT's monitoring process as a message-sending process, i.e., the estimator sends an estimation result to the DT for verification. To capture the interactions between the estimator and DT, we use a Signaling Game with Evidence (SGE), introduced in Sect. 6.5. Figure <ref type="figure">9</ref>.6 illustrates how an SGE captures the interactions of the physical plant and DT in our proposed framework. In this cyber-physical SGE, we have two players: one is the estimator, and the other one is the DT. The estimator has a private identity, denoted by θ ∈ Θ := {θ 0 , θ 1 }, where θ 0 means the estimator is benign, and θ 1 means the estimator is malicious. According to its identity, the estimator will choose an estimation message m ∈ M and send it to the DT for verification. After receiving the message, the DT should determine if the message passes the verification. The estimator and DT have their own utility functions U i : Θ × M × A → R, for i ∈ {s, r}. Detailed information about SGE has been introduced in Sect. 6.5.</p><p>In the following sections, we will find the optimal defense strategy of the DT by finding the PBNE. In the next section, we define the utility functions explicitly and find the PBNE of the proposed SGE. Given the PBNE, we can identify the optimal defense strategies. We summarize the essential notations of this chapter in Table <ref type="table">9</ref>.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3">Equilibrium Results of the Cyber SGE</head><p>In this section, we aim to find the optimal defense strategy against a stealthy sensor attack. To this end, we first define the utility functions, which capture the profit earned by the players. Secondly, we identify the best response of the players when they observe or anticipate the other player's strategy. Finally, we present a PBNE under the players' best response and obtain an optimal defense strategy for the DT. We analyze the stability of the system under the stealthy attack.  </p><formula xml:id="formula_16">x ∈ R nx True estimatioñ x ∈ R nx DT's estimation y ∈ R ny Physical observation z ∈ R nz DT's observation m ∈ M Sender's message f q : M → Q Detection function f b : (0, 1) × Q → (0, 1) Belief-update function ρ 1 &gt; 0 and ρ 2 &gt; 0 Thresholds of the Chi-square detector θ ∈ Θ := {θ 0 , θ 1 } Sender's identity a ∈ A := {0, 1} DT's action q ∈ Q := {0, 1, 2} Detection result U i (θ, m, a), i ∈ {s, r} Utility function of player i π(θ) ∈ [0, 1]</formula><p>Belief about sender's identity</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3.1">SGE Setup for the CPSs</head><p>In this work, we use an SGE to capture the interactions between the physical estimator and the DT. In our scenario, the message set is just the estimation set, i.e., M := R n x . The DT monitors the estimation m k and chooses an action a ∈ A := {0, 1}. Action a = 1 means the estimation passes the verification, while action a = 0 means the verification fails, and the DT will send an alarm to the operators.</p><p>In the next step, we define the utility functions of both players, explicitly. Firstly, we define sender's utility functions U s <ref type="bibr">(θ, m, a)</ref>. Since the sender has two identifies, we need to define two types of utility functions for the sender. The utility function with θ = 0 is defined by</p><formula xml:id="formula_17">U s (θ 0 , m k , a k ) := −E[(m k − x k ) T (m k − x k )],</formula><p>(9.13)</p><p>In (9.13), we can see that U s (θ 0 , m k , a k ) is independent of action a k , and maximizing U s (θ 0 , m k , a k ) is equivalent to the estimation problem (9.6). Hence, given (9.13), the benign sender always sends the true estimation resultx k , defined by (9.7), regardless of action a k . For the malicious estimator, we define its utility function as <ref type="bibr">(9.14)</ref> where 1 {s} = 1 if statement s is true. In (9.14), we see that the motivation of the attacker is to deviate the system state as much as possible while remaining undiscovered. However, the attacker's utility will be zero if the DT detects the attack. Secondly, we define the DT's utility function. Note that the DT's utility function should depend on the identity of the sender. When the estimator is benign, i.e., θ = 0, the DT should choose a k = 1 to accept the estimation. When the estimator is malicious, i.e., (θ = 1), the DT should choose a k = 0 to reject the estimation and send an alarm to the operators. Given the motivations, we define U r (θ,x, a)</p><formula xml:id="formula_18">U s (θ 1 , m k , a k ) := E[(m k − x k ) T (m k − x k )] • 1 {a k =1} ,</formula><formula xml:id="formula_19">U r (θ 0 , m k , a k ) := −(x k − m k ) TQ 0 (x k − m k ) • 1 {a k =0} , U r (θ 1 , m k , a k ) := −(x k − m k ) TQ 1 (x k − m k ) • 1 {a k =1} .</formula><p>whereQ 0 ,Q 1 ∈ R n x ×n x are positive-definite matrices. The weighting matrices will affect the receiver's defense strategy. A large value of tr(Q 1 ) will lead to a conservative strategy, while a large value of tr(Q 0 ) will lead a radical one. Readers can receive more details in Proposition 9.1.</p><p>In the next subsection, we analyze the behaviors of the players and obtain the best-response strategies. Note that function U r (θ, m k , a k ) is deterministic. The reason is that the DT can observex k andx k at time k, explicitly. However, the physical estimator cannot observe x k at time k.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3.2">Best Response of the Players and a PBNE of the SGE</head><p>We first analyze the best response of the DT. Given belief π k (θ ), message m k , and detection result q k , we present the following theorem to identify DT's best response. Proposition 9.1 (DT's Best Response) Given q k = f q (m k ), the DT will choose a k according to the following policy,</p><formula xml:id="formula_20">σ * r (a k = 1|q k ) = ⎧ ⎨ ⎩ 1, if q k = 2, π k (θ 0 ) ≥ β; 0, if q k = 2, π k (θ 0 ) &lt; β; 0, if q k = 2; (9.15) σ * r (a k = 0|q k ) = 1 − σ * r (a k = 1|q k ), (9.16)</formula><p>where β is defined by</p><formula xml:id="formula_21">β := (x k − m k ) TQ 1 (x k − m k ) (x k − m k ) T (Q 0 +Q 1 )(x k − m k ) . (9.17) Proof Note that E[U r (θ, m k , a k = 1)|q k ] ≥ E[U r (θ, m k , a k = 0)|q k ] ⇔ a k = 1 if π k (θ 0 ) ≥ β,</formula><p>where β is defined by (9.17). This completes the proof. Remark 9.1 Given Proposition 9.1, we note that the DT uses a pure strategy since it can make its decision after observing detection result q k and message m k .</p><p>In the next step, we consider the best response of the estimator. If the estimator is benign, i.e., θ = θ 0 , the optimal estimation should be (9.7). Therefore, the optimal utility of the benign estimator is given by</p><formula xml:id="formula_22">U s (θ 0 ,x k , a k ) = E[(x k − x k ) T (x k − x k )] = tr(P k ),</formula><p>where tr(P ) is the trace of matrix P . The following theorem shows the optimal mixed strategy of the benign estimator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 9.2 (Best Response of the Benign Estimator)</head><p>Given the DT's best response (9.15), the optimal mixed strategy of the benign estimator, i.e., θ = θ 0 , is given by</p><formula xml:id="formula_23">σ * s (f q (m k ) = 0|θ 0 ) = F χ (ρ 1 , n x ), (9.18) σ * s (f q (m k ) = 1|θ 0 ) = F χ (ρ 2 , n x ) − F χ (ρ 1 , n x ), (9.19) σ * s (f q (m k ) = 2|θ 0 ) = 1 − F χ (ρ 2 , n x ), (9.20)</formula><p>wherex k is defined by (9.7), F χ (ρ, n) : R + → [0, 1] is the Cumulative Distribution Function (CDF) of the Chi-square distribution with n ∈ Z + degrees.</p><p>Proof Note that the benign estimator will choose m k =x k , defined by (9.7). According to definition (9.11), we know that (x k −x k ) follows a Chi-square distribution with n x degrees. Hence, we have</p><formula xml:id="formula_24">Pr(χ 2 k ≤ ρ 1 ) = F χ (ρ 1 , n x ), Pr(χ 2 k &gt; ρ 2 ) = 1 − F χ (ρ 2 , n x ), Pr(χ 2 k ∈ (ρ 1 , ρ 2 ]) = F χ (ρ 2 , n x ) − F χ (ρ 1 , n x ).</formula><p>Combining the above equations with Chi-square detector (9.12) yields mixed strategies (9.18)-(9.20).</p><p>Remark 9.2 Note that the benign estimator always chooses the optimal estimation 9.7. However, from DT's perspective in this game, the real mixed strategies of the benign estimator are (9.18)-(9.20) because of uncertainty introduced by the noises.</p><p>From the perspective of the malicious estimator, it needs to select σ s (q k |θ 1 ) such that π k (θ 0 ) ≥ β. Given the attackers' incentive, we obtain the following theorem. </p><formula xml:id="formula_25">σ * s (f q (ξ k,1 ) = 0|θ 1 ) = F χ (ρ 1 , n x ), (9.21) σ * s (f q (ξ k,2 ) = 1|θ 1 ) = 1 − F χ (ρ 1 , n x ), (9.22)</formula><p>where ξ k,1 , ξ k,2 are the solutions to the following problems:</p><formula xml:id="formula_26">ξ k,1 ∈ arg max m∈M ρ 1 (x k ) U s (θ 1 , m, a k = 1), (9.23) ξ k,2 ∈ arg max m∈M ρ 2 (x k ) U s (θ 1 , m, a k = 1), (9.24) with spaces M ρ 1 (x k ) and M ρ 2 (x k ) defined by M ρ 1 (x k ) := m ∈ R n x x k − m 2 Σ −1 φ ≤ ρ 1 , M ρ 2 (x k ) := m ∈ R n x x k − m 2 Σ −1 φ ∈ (ρ 1 , ρ 2 ] .</formula><p>Proof Firstly, the attacker has no incentive to choose</p><formula xml:id="formula_27">m k / ∈ M ρ 1 (x k ) ∪ M ρ 2 (x k )</formula><p>because its utility will be zero. Secondly, the attacker aims to choose the mixed strategy σ * s (q k = 1|θ 1 ) as large as possible since it can make a higher damage to the system. Then, we show that the optimal mixed strategy of the attacker is given by (9.21) and (9.22). To do this, based on (6.3), we consider the following belief update:</p><formula xml:id="formula_28">π k+1 (θ 0 ) = σ * s (q k = 0|θ 0 )π k (θ 0 ) σ * s (q k = 0|θ 0 )π k (θ 0 ) + σ s (q k = 0|θ 1 )(1 − π k (θ 0 )) = σ * s (q k = 0|θ 0 )π k (θ 0 ) Δσ s (q k = 0)π k (θ 0 ) + σ s (q k = 1|θ 1 ) , (9.25)</formula><p>where Δσ s (q k = 0) is defined by</p><formula xml:id="formula_29">Δσ s (q k = 0) := σ * s (q k = 0|θ 0 ) − σ s (q k = 0|θ 1 ).</formula><p>Rearranging (9.25) yields that</p><formula xml:id="formula_30">π k+1 (θ 0 ) π k (θ 0 ) = σ * s (q k = 0|θ 0 )π k (θ 0 ) Δσ s (q k = 0)π k (θ 0 ) + σ s (q k = 0|θ 1 )</formula><p>. Given that π k (θ 0 ) ∈ (0, 1], we have</p><formula xml:id="formula_31">⎧ ⎪ ⎨ ⎪ ⎩ π k+1 (θ 0 ) π k (θ 0 ) &gt; 1, if Δσ s (q k = 0) &gt; 0; π k+1 (θ 0 ) π k (θ 0 ) = 1, if Δσ s (q k = 0) = 0; π k+1 (θ 0 ) π k (θ 0 ) &lt; 1, if Δσ s (q k = 0) &lt; 0.</formula><p>When π k (θ 0 ) ∈ [β, 1), the attacker has to choose Δσ s (q k = 0) = 0 to maintain the belief at a constant. Otherwise, the belief will decrease continuously. When the belief π k (θ 0 ) stays lower than β, the DT will send an alert to the operators. Hence, the optimal mixed strategies of the malicious estimator are given by (9.21) and (9.22).</p><p>Given the results of Propositions 9.1, 9.2, and 9.3, we present the following theorem to characterize the unique pooling PBNE.</p><p>Theorem 9.1 (The PBNE of the Proposed SGE) The proposed cyber SGE has a unique pooling PBNE. At the PBNE, the optimal mixed strategies of the benign and malicious sender are presented by (9.18)-(9.20) and (9.21)-(9.22). The DT has a pure strategy defined by (9.15). At the PBNE, belief</p><formula xml:id="formula_32">π * k (θ 0 ) ∈ [β, 1) is a fixed point of function f b , i.e., π * k (θ 0 ) = f b (π * k (θ 0 ), q k ), for q k ∈ Q.</formula><p>Proof We first show the existence of the pooling PBNE. Suppose that both estimators use strategies (9.18)-(9.20), (9.21)-(9.22), respectively, and the DT uses (9.15). Then, no player has incentive to move since these are already the optimal strategies. Besides, for any θ ∈ Θ, q k ∈ Q, we note that</p><formula xml:id="formula_33">π k+1 (θ ) = f b (π * k (θ ), q k ) = π * k (θ ),</formula><p>where f b is defined by (6.3). Hence, π * k (θ ) is a fixed point of function f b , and the belief remain at π * k (θ ), which means the belief stays consistently with the optimal strategies of the sender and receiver. Hence, the proposed strategies pair (σ * s , σ * r ) is a PBNE.</p><p>Secondly, we show that pooling PBNE is unique. We note that the DT and the benign estimator have no incentive to move since they already choose their best strategies. In Proposition 9.3, we already show that the attacker cannot change its mixed strategies. Otherwise, the belief cannot remain constant. Hence, pooling PBNE is unique.</p><p>Remark 9.3 Theorem 9.1 shows that the SGE admits a unique pooling PBNE, which means that an intelligent attacker can use its stealthy strategies to avoid being detected by the DT.</p><p>In the next subsection, we will analyze the stability of the system under the stealthy attack. Besides, we will also evaluate the loss caused by the attack. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.3.3">Estimated Loss Under the Stealthy Attack</head><p>In the previous subsection, we have shown the PBNE in which the attacker can use a stealthy strategy to pass the verification of the DT. In this subsection, we will quantify the loss under the attack. Before presenting the results, we need the following lemma.</p><p>Lemma 9.2 Given ρ i and ξ k,i , for i ∈ {1, 2}, we have the following relationship:</p><formula xml:id="formula_34">ρ i λ max (Σ φ ) ≥ (x k − ξ k,i ) T (x k − ξ k,i ), for i = 1, 2,</formula><p>where λ max (Σ) is the greatest eigenvalue of matrix Σ.</p><p>Proof Firstly, we note that U s is strictly convex in m k . The solution to problem (9.23) and (9.24) must stay at the boundary. Hence, we have</p><formula xml:id="formula_35">ρ i = (x k − ξ k,i ) T Σ −1 φ (x k − ξ k,i ) ≥ (x k − ξ k,i ) T (x k − ξ k,i ) λ max (Σ φ ) (9.26)</formula><p>Rearranging (9.26) yields that</p><formula xml:id="formula_36">ρ i λ max (Σ φ ) ≥ (x k − ξ k,i ) T (x k − ξ k,i ).</formula><p>This completes the proof.</p><p>Considering different estimators, we define two physical cost functions J 0 and J 1 , i.e.,</p><formula xml:id="formula_37">J 0 := lim N →∞ E 1 N N −1 k=0 x T k Qx k + μ T (m k )Rμ(m k ) θ 0 , J 1 := lim N →∞ E 1 N N −1 k=0 x T k Qx k + μ T (m k )Rμ(m k ) θ 1 .</formula><p>We define a loss function ΔJ := J 1 − J 0 to quantify the loss caused by the stealthy sensor attack. Given pooling PBNE defined by Theorem 9.1, we provide an upperbound of ΔJ in the following theorem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 9.2 (Bounded Loss)</head><p>The proposed framework can guarantee stability of the CPSs, and the value of function ΔJ is bounded by a constant, i.e., where α 0 and α 1 are defined by</p><formula xml:id="formula_38">ΔJ = J 1 − J 0 ≤ α 1 tr(P * ) − α 0 tr(P * ) + α 1 ρ 1 λ max (Σ φ )F χ (ρ 1 , n x ) + α 1 ρ 2 λ max (Σ φ )(1 − F χ (ρ 1 , n x )), (<label>9</label></formula><formula xml:id="formula_39">α 0 := λ min (R K )(λ min (G) − λ min (R K )) λ min (G) , α 1 := λ max (R K )(λ max (R K ) + 2λ max (G)) λ max (G) ,</formula><p>and R K := K T RK, G := Q + R K ; λ max (W ) and λ min (W ) are the greatest and smallest eigenvalues of matrix W .</p><p>Proof Firstly, we note that</p><formula xml:id="formula_40">E x k 2 Q + Kx k 2 R = E x k 2 G + 2x T k R Kêk + ê k 2 R K ≥ E λ min (G)x k + λ min (R K ) √ λ min (G)ê k 2 + λ min (R K )(λ min (G) − λ min (R K )) λ min (G) ê k 2 ≥ α 0 tr(P k ),</formula><p>Using the above inequality, we observe that</p><formula xml:id="formula_41">J 0 = lim N →∞ 1 N N −1 k=0 E x k 2 Q + Kx k 2 R ≥ lim N →∞ 1 N N −1 k=0 α 0 tr(P k ) = α 0 tr(P * ), (9.28)</formula><p>whereP * is defined by (9.8). Secondly, we also note that </p><formula xml:id="formula_42">E x T k Qx k + μ T (ξ k,i )Rμ(ξ k,i ) = E x k 2 Q + x k +ẽ k + ξ k,i −x k 2 R K ≤ E x k 2 G + 2x T k R Kẽk + 2x T k R K (ξ k,i −x k ) + 2ẽ T k R K (ξ k,i −x k ) + ξ k,i −x k 2 R K + ẽ k 2 R K</formula><formula xml:id="formula_43">≤ E 3 x k 2 G + λ 2 max (R K ) λ max (G) ẽ k 2 + ξ k,i −x k 2 + 2λ max (R K ) ẽ k 2 + 2λ max (R k ) ξ k,i −x k 2 ≤ 3 x k 2 G + α 1 tr(P k ) + α 1 ρ i λ max (Σ φ ), (9.29)</formula><p>We complete the squares to deduce the second inequality of (9.29) Similarly, we have</p><formula xml:id="formula_44">J 1 = lim N →∞ 1 N N −1 k=0 F χ (ρ 1 , n x )E x k 2 Q + ξ k,1 2 R K + 1 − F χ (ρ 1 , n x ) E x k 2 Q + ξ k,1 2 R K ≤ lim N →∞ 3 N N −1 k=0 x k 2 G =0 +α 1 ρ 1 λ max (Σ φ )F χ (ρ 1 , n x ) + α 1 ρ 2 λ max (Σ φ )(1 − F χ (ρ 1 , n x )) + α 1 tr(P * ), (9.30)</formula><p>whereP * is defined by (9.10). Combining inequalities (9.28) and (9.30) yields inequality (9.27). Hence, the system is stable, and the impact of the attack is bounded by a constant.</p><p>Remark 9.4 Theorem 9.2 shows that the difference between J 0 and J 1 is bounded; i.e., the stealthy estimation attack cannot deviate the system to an arbitrary point even if the attacker has an infinite amount of time.</p><p>In the next subsection, we will use an application to evaluate the performance of the proposed defense strategies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.4">Simulation Results</head><p>In this section, we use a two-link Robotic Manipulator (RM) to investigate the impact of the estimation attacks. In the experiments, we use different case studies to analyze the performance of the proposed defense framework. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.4.1">Experimental Setup</head><p>Figure <ref type="figure">9</ref>.7 illustrates the physical structure of the two-link RM. Variables g 1 and g 2 are the angular positions of Links 1 and 2. We summarize the parameters of the RM in Table <ref type="table">9</ref>.2. Let g = [g 1 , g 2 ] T be the angular vector and τ = [τ 1 , τ 2 ] T be the torque input. According to the Euler-Lagrange Equation, we obtain the dynamics of the two-link RM as</p><formula xml:id="formula_45">M(g)g + S(g,ġ)ġ = τ, (9.31)</formula><p>where matrices M(g) and S(g,ġ) are defined by To control the two-link RM, we let τ be τ := M(g)a g + S(g,ġ)ġ, where a q ∈ R 2 is the acceleration that we need to design. Note that M(g) is positive-definite, i.e., M(g) is invertible. Hence, substituting τ into (9.31) yields that M(g)g = M(g)a g ⇒g = a g .</p><formula xml:id="formula_46">M(g) := a + b cos(g 2 ) δ + b cos(g 2 ) δ + cos(g 2 ) δ , S(g,ġ) := −b sin(g 2 )ġ 2 −b sin(g 2 )(ġ 1 +ġ 2 ) b sin(g 2 )ġ 1 0 , a := I 1 + I 2 + η 1 r 2 1 + η 2 (l 2 1 + r 2 2 ), b := η 2 l 1 r 2 , δ := I 2 + η 2 r 2 2 .</formula><p>Let p ∈ R 2 be the position of RM's end-effector. We havë <ref type="bibr">(9.32)</ref> where H (g) is the Jacobian matrix.</p><formula xml:id="formula_47">p = H (g)g +Ḣ (g)ġ = H (g)a g +Ḣ (g)ġ,</formula><p>Then, we substitute a g := H −1 (g)(u −Ḣ (g)) into (9.32), arriving atp = u. Let x = [p T ,ṗ T ] T be the continuous-time state. Then, we obtain a continuous-time linear systemẋ = A c x + B c u. Given a sampling time ΔT &gt; 0, we discretize the continuous-time system to obtain system model (9.1). We let y k and z k be</p><formula xml:id="formula_48">y k = x k + v k , z k = p(kΔT ) + d k (9.33)</formula><p>We assume that the DT uses security-protected cameras to identify the position of the end-effector.</p><p>In the experiments, we let the RM to draw a half circle on a two-dimensional space. The critical parameters are given by β = 0.65, n x = 4, ρ 1 = 9.49, ρ 2 = 18.47, F χ (ρ 1 , n x ) = 0.95, F χ (ρ 2 , n x ) = 0.999.</p><p>We have three case studies: a no-attack case, a normal-attack case, and a stealthyattack case. In the normal-attack case, the attacker is not aware of the defense strategies and deviate the system from the trajectory, directly. In the last case, the attacker aims to tamper the estimation without being detected.</p><p>Figure <ref type="figure">9</ref>.8, 9.9, and 9.10 illustrate the simulation results of the case studies. In Fig. <ref type="figure">9</ref>.8a, we can see that the RM can track the trajectory smoothly when there is no attack. However, we note that DT's estimation is worse than the physical estimation, which coincides with our expectations. Figure <ref type="figure">9</ref>.8b and c shows the value of the Chisquare and the belief of the DT. In the no-attack case, the Chi-square detector will remain silent with a low false alarm rate, and the belief stays at a high level. In Fig. <ref type="figure">9</ref>.9a, the attackers deviate the system without considering the detection. Even though DT's estimation is not accurate, the attacker cannot tamper that. Therefore, the detector will rapidly locate the attack and send alarms to the operators. The belief of θ 0 will remain at the bottom line. In Fig. <ref type="figure">9</ref>.10, differently, the stealthy attackers know the defense strategies and try to maintain the Chi-square value below threshold ρ 1 . However, the behavior mitigates the impact of the attack, which also coincides with the result of Theorem 9.2.  <ref type="figure">9</ref>.11a presents that the MSE of the physical estimator is much smaller than the DT's estimator, i.e., the physical estimator can provide more accurate sensing information. However, in Fig. <ref type="figure">9</ref>.11b, we can see that the attacker can deviate the physical estimation to a significant MSE. Besides, under the DT's supervision, the stealthy attacker fails to generate a large MSE. The above results show that the proposed defense mechanism succeeds in mitigating the stealthy attacker's impact. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.5">Conclusions and Notes</head><p>In this chapter, we have considered a stealthy estimation attack, where an attack can modify the estimation results to deviate the system without being detected. To mitigate the impact of the attack on physical performance, we have developed a Chisquare detector, running in a Digital Twin (DT). The Chi-square detector can collect DT's observations and the physical estimation to verify the estimator's identity. We have used a Signaling Game with Evidence (SGE) to study the optimal attack and This chapter has leveraged signaling game models as one of the building blocks to design defense strategies to capture the sender's unknown identity. The Chisquare detection has provided evidence to the signal game framework. This type of game framework is called a signaling game with evidence. Signaling games have been used to investigate many security problems in which a sender has access to the information while a receiver cannot. This situation naturally applies to man-in- the-middle attack in remotely controlled robotic systems <ref type="bibr">[175]</ref>, spoofing attacks <ref type="bibr">[191]</ref>, compliance control <ref type="bibr">[24,</ref><ref type="bibr">24]</ref>, deception over social networks <ref type="bibr">[112]</ref>, and denial of service <ref type="bibr">[100,</ref><ref type="bibr">124]</ref>. Signaling games provide a mechanism to design trust mechanisms on the received messages and the decisions to accept or reject inputs in many applications. As demonstrated in this chapter, they can be easily integrated into system designs. This design philosophy has also been applied to cloud-enabled control systems as in <ref type="bibr">[125]</ref><ref type="bibr">[126]</ref><ref type="bibr">[127]</ref>, where the equilibrium solutions are used as a trust management tool to select trustworthy inputs for the feedback system. • For each observation z ∈ Z, Φ(z) denotes the observation distribution matrix with elements φ ii (z) = Pr(z k = z|s k = i), φ ij (z) = 0, ∀i, j ∈ S, z ∈ Z, i = j.</p><p>• Given state s k and action a k , the decision-maker incurs a cost g(s k , a k ).</p><p>The POMDP, defined by (10.1), is a partially observed model since the decisionmaker cannot observe state s k directly. Instead, it only observes a noisy observation z k that depend on the state specified by the observation distribution.</p><p>To specify a POMDP problem, we need to consider a performance criterion or objective function. This chapter considers an infinite horizon objective, given by</p><formula xml:id="formula_49">J (θ 0 , μ) = E μ ∞ k=0 β k g(s k , μ) θ 0 , (10.2)</formula><p>where θ 0 := Pr(s 0 ) is an initial distribution of the state, and β ∈ (0, 1) is a discounted factor. E μ denotes expectation with respect to the joint probability distribution of (s 0 , z 0 , x 1 , z 1 , . . . , ). The objective of the decision-maker is to determine the optimal policy sequence μ * ∈ arg min μ J (θ 0 , μ), for any initial prior θ 0 ∈ Θ. In the next subsection, we will define the belief state θ as well as the dynamical movement of θ</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.1.2">Belief State Formulation of a POMDP</head><p>Note that at time k, the decision maker has an information set i k , defined by i k := {θ 0 , a 0 , z 1 , . . . , θ k − 1, a k−1 , z k }.</p><p>(10.3) Given information set i k , the decision-maker will choose its optimal action using a k = μ * (i k ), where μ * is the optimal policy of the decision-maker. Since the dimension of i k grows with time k, we need to develop a sufficient statistic that does not grow in dimension. One way to obtain a sufficient statistic for i k is to introduce the posterior distribution computed via the HMM filter. Hence, we define the posterior distribution of the Markov chain as</p><formula xml:id="formula_50">θ k (i) := Pr(s k = i|i k ), i ∈ S.</formula><p>We will call the S-dimensional probability vector θ k := [θ k (1), . . . , θ k (S)] T as belief state or information state at time k. We use the Bayes' rule to update the belief. Given Bayes's rule, we define a belief update function T : Θ × Z × A → Θ, i.e., Given the belief state, the decision-maker can choose its optimal action using a k = μ * (θ k ), where the dimension of θ is a constant. To obtain a policy based on the belief state, we reformulate the POMDP objective (10.2) in terms of belief state. Given (10.2), we observe that Then, we aim to find the optimal policy μ * to minimize cost function (10.4). To find the optimal policy μ * , we will introduce stochastic dynamic programming in the next subsection.</p><formula xml:id="formula_51">J (θ 0 , μ) := E μ ∞ k=0 β k g(s k , μ) θ 0 (a) = E μ ∞ k=0 β k E{g(s k , μ)|i k } θ 0 (b) = E μ ∞ k=0 β k g T (μ)θ k θ 0 , (<label>10</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.1.3">Stochastic Dynamic Programming</head><p>Since a POMDP is a continuous-state MDP with state space being the unit simplex, we can write down the dynamic programming equation for the optimal policy. Given a policy μ, we define a value function</p><formula xml:id="formula_52">V μ : Θ → R as V μ (θ k ) := E μ ∞ j =k β j −k g T (μ)θ j θ k = g T (μ)θ k + β z∈Z V μ (T (θ k , z, μ))σ (θ k , z, μ), (10.5)</formula><p>where the second equality comes from the Bellman equation. Hence, we can find the optimal policy using</p><formula xml:id="formula_53">μ * (θ k ) ∈ arg min μ∈A ⎧ ⎨ ⎩ g T (μ)θ k + β z∈Z V μ (T (θ k , z, μ))σ (θ k , z, μ) ⎫ ⎬ ⎭ .</formula><p>However, since the belief space Θ is uncountable, the above dynamic programming recursion does not translate into practical solutions. We need to evaluate V μ (θ ) at each θ ∈ Θ, where Θ is uncountable. Hence, in the following subsection, we will introduce a method to address this issue.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.2">Algorithms for Infinite Horizon POMDPs</head><p>As stated in the previous section, it is challenging to solve the POMDP using dynamic programming since the belief space is uncountable. In this section, we first show a piecewise linear property of the POMDPs. Then, we define a Markov Partition (MP), with which we can simplify the POMDPs. In the end, we can use Policy Iteration (PI) to solve the simplified POMDPs.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.2.1">Piecewise Linear Property of POMDPs</head><formula xml:id="formula_54">, i.e., V μ (θ ) = η T (θ, μ) × θ,</formula><p>where η :</p><formula xml:id="formula_55">Θ × A → R S satisfying η(θ, μ) = g(μ) + β z∈Z Λ(μ)Φ(z)η(θ , μ).</formula><p>(10.6) Theorem 10.1 shows a very nice property for the POMDP, but the problem is still challenging to solve since the number of linear equations (10.6) is uncountable. In the next section, we will present the definition of a Markov Partition (MP), which can simplify the POMDP to a finite-space case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.2.2">Algorithms Based on Markov Partition</head><p>In this subsection, we aim to simplify the POMDP. One critical approach is to use the Markov Partition. Given a stationary policy μ, we will partition the belief space Θ into finite intervals. If the intervals satisfy the properties of Markov partition (MP), then, we can treat the POMDP as a discrete MDP with a finite number of states. We first present the definition of MP as follows.</p><p>Definition 10.1 (Markov Partition) Given a stationary policy μ, a partition P = {P 1 , P 2 , . . . , P Y } of Θ is said to be Markov if for any y ∈ Y = {1, 2, . . . , Y }:</p><p>1. The policy μ maps all the beliefs θ ∈ P l to the same action, i.e., for θ 1 , θ 2 ∈ P y , we have μ(θ 1 ) = μ(θ 2 ).</p><p>2. The belief update function T (θ, z, μ) maps all the beliefs in P y to the same set P v(z) , i.e., for any θ 1 , θ 2 ∈ P y , T (z, θ 1 , μ) and T (z, θ 2 , μ) lie in the same set P v(z) , where v(z) ∈ Y.</p><p>If a POMDP admits an MP with Y number of intervals, then it behaves like an MDP. Given an MP with Y states and a policy μ, we have where η(θ, μ) is obtained by solving (10.7). We update the policy using μ(θ) ∈ arg min μ∈A Q(θ, μ).</p><p>(10.8)</p><p>Since the number of Eq. (10.7) is finite, we can use linear programming to solve (10.8). Now, we aim to show the existence of an MP. To this end, we need the following preliminary definitions. We let D μ be the smallest closed set of discontinuities of stationary policy μ, i.e., D μ := {θ ∈ Θ : μ(θ) is discontinues at θ }.</p><p>Given D 0 := D μ , we define a sequence of sets D 1 , D 2 , . . . , D n , . . . , where D n is given by D n := {θ ∈ Θ : T (θ, z, μ) ∈ D n−1 for some z ∈ Z}, (10.9)</p><p>where n ∈ Z + is the set index. Then, the following theorem presents a sufficient and necessary condition for the existence of an MP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 10.2 (Sondik [156])</head><p>Consider the discounted cost POMDP defined in (11.10):</p><p>1. A stationary policy is finitely transient if and only if there exists an integer n such that D n = ∅. 2. A finitely transient policy μ induces a Markov partition P of Θ. The elements in the set ∪ n j =0 D j specify the boundaries of the partition P. Remark 10.1 Theorem 10.2 provides a method to find an MP P of a POMDP, i.e., we need to show that there exists a finite constant n such that D n = ∅ for each stationary policy μ τ , where τ = 0, 1, . . . is the iteration step. Hence, one way to solve an infinite horizon POMDP is to find an MP. In the next chapter, we will present a specific application based on a cyber POMDP. We will use Theorem 10.2 to show that the cyber POMDP admits an MP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10.3">Conclusions and Notes</head><p>In this chapter, we have introduced the formulation of POMDPs and their structural properties. Discrete-state POMDPs are often used to capture the dynamics of the cyber state, while continuous state-space models are useful for physical layer control designs. In the next chapter, we will present a specific application based on POMDPs. In the application, the defender cannot observe the states, but it has a detector to diagnose the physical systems. Based on the application, we will present many analytical results, showing a strong interdependency between the cyber and physical layers. For a general theory of POMDPs, readers can refer to <ref type="bibr">[82,</ref><ref type="bibr">83,</ref><ref type="bibr">131]</ref>. For a review of algorithmic solutions to POMDP, readers can refer to <ref type="bibr">[130,</ref><ref type="bibr">149]</ref>.</p><p>One relevant and immediate extension of POMDPs is partially observable Markov games. The decision process is extended to a multiplayer scenario in which each player gathers his observations, forms his beliefs, and determines his control strategies. This class of problems is one type of decentralized stochastic control problem. Interested readers can refer to <ref type="bibr">[36]</ref> for more recent advances in the area. One special class is a two-player one-sided partially observable zero-sum stochastic games. One player has the complete observation of the states while the other player has partial observations. Readers can refer to <ref type="bibr">[60,</ref><ref type="bibr">61]</ref> for recent developments on this problem. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig</head><label></label><figDesc>Fig. 9.1 The Stealthy Estimation Attack and the Defense Mechanism based on a Digital Twin: the attacker aims to modify the estimation results in a CPS, while the Digital Twin protects the system by monitoring the results</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>of CPS with a Digital Twin</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>of CPS with a Digital Twin</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig</head><label></label><figDesc>Fig. 9.3 The Stealthy Estimation Attack: intelligent attacker aims to deviate the state by modifying the estimation results</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Fig. 9.4The CPS with a DT: the DT uses a secure observation z k to obtain an estimationx k ; giveñ x k , we use a Chi-square detector monitor estimation resultx k</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 . 5</head><label>95</label><figDesc>Fig.9.5 The DT's Monitoring Process: we can view the DT's monitoring process as a message-sending process, i.e., the estimator sends a message to the DT for verification</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head></head><label></label><figDesc>Fig. 9.7 The dynamic model of a two-link robotic manipulator (RM): the RM has two links and moves in a two-dimensional space</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head></head><label></label><figDesc>Fig. 9.8 No-attack case: (a) the system trajectory, physical estimation and DT's estimation; (b) the Chi-square value; (c) DT's belief π(θ 0 )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head></head><label></label><figDesc>Fig. 9.9 Normal-attack case: (a) the system trajectory, physical estimation and DT's estimation; (b) the Chi-square value; (c) DT's belief π(θ 0 )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head></head><label></label><figDesc>Fig. 9.10 Stealthy-attack case: (a) the system trajectory, physical estimation and DT's estimation; (b) the Chi-square value; (c) DT's belief π(θ 0 )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head></head><label></label><figDesc>Fig. 9.11 The comparison of the Mean Square Error (MSE): (a) the comparison between the MSE of physical estimation and DT's estimation; (b) the MSE of different case studies</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head></head><label></label><figDesc>Fig. 10.1 Partially observed Markov Decision Process (POMDP) schematic setup. The Markov system together with noisy sensor constitutes a hidden Markov model (HMM). The HMM filter computes the posterior belief θ k of the state of Markov chain. The POMDP controller (decisionmaker) then choose the action a k at time k based on belief θ k</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_25"><head></head><label></label><figDesc>θ k+1 = T (θ k , z k+1 a k ) := Φ(z)Λ T (a)θ k σ (θ k , z k+1 , a k ) σ (θ k , z k+1 , a k ) := 1 T S Φ(z)Λ T (a)θ.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_26"><head></head><label></label><figDesc>Partially Observed MDPs where g(a) := [g(1, a), . . . , g(S, a)] T ; equality (a) uses the smoothing property of conditional expectation [82]; equality (b) comes from the definition of expectation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_28"><head></head><label></label><figDesc>μ y ) = g(μ y ) + β z∈Z Λ(μ y )Φ(z)η(v(z), μ v(z) ).(10.7)where μ y = μ(θ), for θ ∈ P y . Then, we define a Q-function Q :Θ × A → R as Q(θ, a) := g T (a)θ + β z∈Z V μ (T (θ, z, a))σ (θ, z, a). According to Theorem 10.1, we can rewrite the Q-function as Q(θ, a) = η T (θ, a) × θ, with η(θ, a) = g(a) + β z∈Z Λ(a)Φ(a)η(θ , μ).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 9 . 1</head><label>91</label><figDesc>Summary of the notations and functions Notation Description x ∈ R nx Real system statê</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Despite the belief state Θ being continuum, we present the following remarkable results based on[155]. They have shown that Bellman's equation (10.5) has a finitedimensional characterization when the observation space Z is finite. The following theorem characterizes these results.</figDesc><table><row><cell>Theorem 10.1 Consider the POMDP model (10.1) with finite action space A =</cell></row><row><cell>{0, 1, dots, A} and finite observation space Z = {0, 1, dots, Z}. At each time k, the</cell></row><row><cell>value function V μ (θ ) of Bellman's equation (10.5) and associated optimal policy μ  *  (θ ) have the following finite dimensional characterization: V μ (θ ) is piecewise</cell></row><row><cell>linear and concave with respect to θ ∈ Θ</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">t r a c k ers of t w a r e . c o m</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9">Secure Estimation of CPS with a Digital Twin</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9">Secure Estimation of CPS with a Digital Twin</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9">Secure Estimation of CPS with a Digital Twin</note>
		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>
