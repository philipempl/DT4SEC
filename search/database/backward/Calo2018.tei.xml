<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Self-Generation of Access Control Policies</title>
			</titleStmt>
			<publicationStmt>
				<publisher>ACM</publisher>
				<availability status="unknown"><p>Copyright ACM</p>
				</availability>
				<date type="published" when="2018-06-07">2018-06-07</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Seraphin</forename><surname>Calo</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research Yorktown Heights</orgName>
								<address>
									<region>New York</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff6">
								<address>
									<settlement>New York</settlement>
									<region>NY, USA, 9 pages</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Dinesh</forename><surname>Verma</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">IBM Research Yorktown Heights</orgName>
								<address>
									<region>New York</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff6">
								<address>
									<settlement>New York</settlement>
									<region>NY, USA, 9 pages</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Supriyo</forename><surname>Chakraborty</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">IBM Research Yorktown Heights</orgName>
								<address>
									<region>New York</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff6">
								<address>
									<settlement>New York</settlement>
									<region>NY, USA, 9 pages</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Elisa</forename><surname>Bertino</surname></persName>
							<affiliation key="aff3">
								<orgName type="institution">Purdue University West Lafayette</orgName>
								<address>
									<region>Indiana</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff6">
								<address>
									<settlement>New York</settlement>
									<region>NY, USA, 9 pages</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Emil</forename><surname>Lupu</surname></persName>
							<affiliation key="aff4">
								<orgName type="institution">Imperial College London</orgName>
								<address>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Gregory</forename><surname>Cirincione</surname></persName>
							<affiliation key="aff5">
								<orgName type="laboratory">Army Research Labs Adelphi</orgName>
								<address>
									<settlement>Maryland</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Self-Generation of Access Control Policies</title>
					</analytic>
					<monogr>
						<title level="m">Proceedings of the 23nd ACM on Symposium on Access Control Models and Technologies</title>
						<meeting>the 23nd ACM on Symposium on Access Control Models and Technologies						</meeting>
						<imprint>
							<publisher>ACM</publisher>
							<date type="published" when="2018-06-07" />
						</imprint>
					</monogr>
					<idno type="DOI">10.1145/3205977.3205995</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.2" ident="GROBID" when="2021-06-09T12:23+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Dynamic Security</term>
					<term>IoT</term>
					<term>Machine Learning</term>
					<term>AI</term>
					<term>Autonomic Access Control</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Access control for information has primarily focused on access statically granted to subjects by administrators usually in the context of a specific system. Even if mechanisms are available for access revocation, revocations must still be executed manually by an administrator. However, as physical devices become increasingly embedded and interconnected, access control needs to become an integral part of the resources being protected and be generated dynamically by the resources depending on the context in which they are being used. In this paper, we discuss a set of scenarios for access control needed in current and future systems and use that to argue that an approach for resources to generate and manage their access control policies dynamically on their own is needed. We discuss some approaches for generating such access control policies that may address the requirements of the scenarios.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Access control is a fundamental part of security in IT systems, and various approaches to properly authenticate and control access to sensitive resources have been developed <ref type="bibr" target="#b8">[9]</ref>, including role based <ref type="bibr" target="#b6">[7]</ref> and attribute based <ref type="bibr" target="#b12">[13]</ref> access control schemes, and their numerous variants <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b13">14]</ref>. While the need for dynamic access control is recognized, the solutions proposed for dynamicity have been grafted over a static access control paradigm <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b11">12]</ref>. Nevertheless, current approaches for access control tend to be relatively static, have to be managed by human administrators, and in many cases imposed as an external security mechanism to wrap around the operation of a resource.</p><p>As information systems become more dynamic, virtualized, grow in size and scale, and are increasingly used to interconnect physical systems, existing access control mechanisms may turn out to be inadequate to deal with the resulting complexities. In this paper, we argue that we need to envision a new type of access control paradigm, one in which resources determine their own access control policies from a dynamic assessment of their context of operations, the risks versus utility trade-off imposed in a specific situation and learn how to adapt their behavior. Static access control paradigms and supporting dynamicity by grafting dynamic access control postfacto, e.g., using a management system for dynamic access control, is no longer going to be sufficient. The intelligence to provide access control in a dynamic manner needs to be embedded within the resources themselves.</p><p>We begin this paper with a discussion of several scenarios in which existing access control paradigms may prove to be inadequate. These scenarios motivate the need for resources to create their own access control policies in a dynamic manner. Finally, we discuss some approaches by which the vision of resources that generate their own policies can be attained and conclude with a discussion about when each approach may be applicable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">SCENARIOS</head><p>The scenarios that we discuss below are ones that are going to be real in the imminent future. In some cases, one can even assert that the situation described is already present in many environments. In all the scenarios, we argue that the current access control mechanisms will be inadequate to address the security needs of the scenario.</p><p>Current access control mechanisms are derived primarily from a model in which "subjects" 1 try to access resources and a complete set of subjects and resources can be specified in advance in an access control matrix <ref type="bibr" target="#b18">[19]</ref>. Access control is enforced by either considering the set of subjects that are allowed access to a resource (by maintaining an access control list) or by considering the set of resources a subject is allowed to access (capabilities). On this basic mechanism, one can add definitions of "roles" to group subjects and/or resources; or arrange these subjects and resources in different hierarchies to simplify the task of representing the access control matrix. However, the matrix remains relatively static, and rarely considers the fact that resources interact with each other and may require a continuously changing access control matrix. More recent attribute-based access control models <ref type="bibr" target="#b12">[13]</ref>, of which XACML 2 is a well-known example, try to provide richer access based on values of properties (e.g. attributes) characterizing subjects and resources and are also able to take context into account. However, permissions in such models are usually static and need to be issued by an administrator. Furthermore, these models require the acquisition of trusted attribute information. The static nature of access control may be inadequate in many situations. There are models which take into account context information. Some attention has been given to add dynamicity as an after-thought through management systems or as part of a federation architecture. For example, roles are delegated in a dynamic manner to deal with dynamic coalitions <ref type="bibr" target="#b10">[11]</ref>, an intelligent network management system reacts to current threat to adjust network security policies <ref type="bibr" target="#b5">[6]</ref>, higher level workflows are used to determine access control <ref type="bibr" target="#b11">[12]</ref>, or dynamic attributes like location are used to determine roles <ref type="bibr" target="#b2">[3]</ref>. However, the context information is usually limited to location and time and even for this limited context there are no effective approaches for dealing with rapidly changing contexts (which is relevant especially for mobile systems). In order to cope up with the rapid dynamicity in the system, the use-cases below require resources to be able to determine their own access control policies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Car Navigation Systems</head><p>A car navigation system has several types of information available to the driver, and information such as the home location and previous destinations is available to any person who is able to access the car. However, open access to this information creates known security exposures, e.g., a thief may break into a car parked at a movie theater, drive the car to the home location, open the garage door using the remote control in the car, and rob the house under the likely scenario that the home is unoccupied.</p><p>Adding a static access control paradigm to the information, e.g., defining the role of a driver and/or passenger, and assigning role or attribute-based access control permissions does not solve this problem. Similarly, identifying the driver using visual recognition with a camera and only allowing access to home location and/or recent destinations to the authorized driver is not a viable solution. The car may be driven on occasions by the spouse, children or neighbor of the most frequent driver, and authorizing each one to the car systems would be tedious. If a policeman or paramedic needs to take the driver, who may be sick, back to his or her home, they should be authorized to get the home information. If the driver is in the passenger seat of the car, the access should probably be authorized. On the other hand, if a previously unseen person has broken the window of the car to enter, that is likely to be a burglar, access should be denied. The starting location of the car, the presence/absence of the most frequent driver (see <ref type="bibr" target="#b2">[3]</ref> for a preliminary notion of proximity-based access control), and the status of the car, all contribute to the decision as to whether the access to information in a navigation system (or other systems in the car) should be allowed. If we add the other issues which arise when a car is used by rental companies, where there is no normal driver, but an authorized driver or a set of authorized drivers has temporary authorization to drive the car, thus requiring configuration of the car access control systems on each rental, and revocation of the authorization when the car is returned, the situation becomes even more complex.</p><p>Dealing with all the dynamic contexts which could arise in the automobile and combinations of drivers cannot be achieved by means of current access control mechanisms. A dynamic access control scheme, where the navigation system, the car remote, and the car ignition system, make their own access control rules based on the current context is needed. The intelligence cannot be put into a management system since the connectivity of the car to the management system would frequently be interrupted depending on the usage pattern of the car.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Partner Information Access</head><p>Modern enterprise and university research has become more and more collaborative. Whether it is research, product development, or operational service creation, it is very common for several organizations to collaborate together to engage in a joint task. Each such cooperation requires access to resources and services that only the members of the alliance are allowed to access.</p><p>Most enterprise and government systems, however, remain bound to the concept of a static access control, where users outside the enterprise are considered potential threats and restricted in which services they can use. Although the use of client-side scripts and programs (e.g., Java or JavaScript code for video meetings) is prevalent, static protection systems would prevent such code from entering the enterprise network, and access to many useful services would thus be eliminated. The situation is made worse since many users frequently work remotely, so access control based on source and destination network addresses of users proves woefully inadequate.</p><p>Without denying the need for security for the enterprises, the identity, business arrangements and trust relationships must be considered to determine the dynamic context of a network access request, and enhanced access to services provided to trusted partners. Given the myriad of partnerships, alliances and collaborations any large organization engages in, the access granted needs to depend on the context and sensitivity of the information, and may need to consider history of previously granted accesses or previously accessed information.</p><p>The situation is shown in Figure <ref type="figure" target="#fig_0">1</ref>. Organizations A and B have an existing agreement which allows them to share a set of common services. When employee X from Organization A tries to access a web conferencing service which is operated in an authorized manner by organization D under authorization by organization B, organization A's firewall access control policies should be smart enough to allow access to the client-side code that is needed for service participation on X 's machine, as long as the web conferencing session includes an employee Y from the partner organization. However, if the same web conferencing service is being used by Organization C, which does not have an existing agreement with Organization A, any session which is an attempt by employee X to access the service with an employee of organization C should be denied. So even though the end-points of the communication for the two requests are the same, the context of operation, and the identities and affiliations of who else is in the conference as well as the relationships between organizations, need to be taken into account to determine whether access is to be allowed or not, and whether the code being sent by organization D is a threat to organization A.  While the software in an enterprise would typically be able to contact a management server and get the required dynamic access control policy, there are several organizations where partners cannot assume constant connectivity to a management service. Some examples include coalitions operating in a remote region, companies exploring for oil or minerals jointly in a remote area, or ships from different navies conducting a joint exercise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Elastic Data Centers</head><p>Technologies such as virtual machines, Docker containers, Kubernetes and microservices-based architectures enable the concept of elastic services. In elastic services, a service may be running as multiple parallel tasks (a task being either a virtual machine, a container or a parallel service or micro-service instance).</p><p>Static access control mechanisms require setting up access control rules in different components of the system. With the high degree of dynamicity in the environment, manual configuration of such access control policies is challenging. An alternative would be to have a centralized system which generates access controls for the configuration as it changes. The master control would then be responsible for keeping track of the current configuration of a dynamic system and ensuring that the right access controls are in place.</p><p>However, centralizing the access control, while simple in concept, can be fraught with challenges when the set of virtual components are changing rapidly, and each change requires accessing a central location. There will be race conditions where the master configuration is out of sync with the actual configuration of the dynamic system, especially if every configuration change requires accessing the master server. It would be highly desirable that such central access be made for less dynamic aspects of the environment, while more dynamic issues such as access control for each device be able to be determined automatically by each element in the system.</p><p>An illustrative example is shown in Figure <ref type="figure">2</ref>, in which an application running at the data center consists of three tiers of applications, let us say a tier of authentication services (circle shape), a tier of web application services (triangle shape), and a tier of database services (rhombus shape). The square shapes are for services that may belong to some other applications. Each tier consists of one or more services performing the task required of it. The authentication services, the application services and the database services are all virtual machines (or other virtual entities) which need to be configured physically so they allow access only to the other virtual machines belonging to the same application. The triangles permit access to the circles, and the rhombuses permit access to the triangles. The circles, triangles and the rhombuses should not permit access to the squares. The number of circles, triangles, rhombuses and even the squares in the system can vary over time.</p><p>Physically, the services can be running on physical servers in any configuration and share the physical capacity of the system. A possible configuration is shown to the right of Figure <ref type="figure">2</ref>. This gives the ability of squares to send requests to the triangles, circles and rhombuses on the same or other machines. However, each virtual machine needs to protect itself to only allow requests from the tier ahead of it. This protection needs to be updated as new instances are added in each tier.</p><p>While the data centers do have a good connectivity to a local server that can provide them with dynamic access control guidelines, the rapid rate of changes in the system may make it more efficient if the virtual machines/containers could generate their own access control policies under a slower-rate supervision of the management server.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Coalition Resource Sharing</head><p>Military coalitions are becoming common with different countries joining forces in order to deal with the challenges of an increasingly complex world. When such military coalitions are formed, they often need to form dynamic communities of interest (CoI). A CoI consists of people, resources and infrastructure established for a relatively short period of time, e.g., a CoI may consist of a group of U.S. and UK soldiers that will be distributing food packets to a remote village which has been impacted by floods, and the operation will last for a couple of days. When a CoI contains local civilian organizations or NGOs, the degree of trust among organizations can vary widely.</p><p>An example of a CoI is provided in Figure <ref type="figure" target="#fig_2">3</ref>, in which partner A provides people, drones and a mule, partner B provides people,  computing infrastructure and automated mules, and partner C provides drones and people. When dynamic CoIs are formed, resources among different coalition partners need to be shared and pooled together for the common task. The access control and authorizations for access to the shared resources need to be granted dynamically as these CoIs are formed and removed as the CoIs disband. Since the resources that are used for the CoI may also be used for other operations that a country may not want to share with other coalition partners, access to resources needs to be granted based on the situation. If the humanitarian mission mentioned above comes under an attack, and an attack drone with U.S. controls needs to expand its access control to its UK colleagues, then that access control ought to be provided based on the context. Given the range of dynamic situations that can arise in the context of a military operation, access control must be determined by resources themselves on a dynamic basis depending on the context, and re-evaluated as the context changes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Client Side IoT Security</head><p>Devices that used to deal with physical processes, e.g. heaters, coolers, elevators, automobiles, centrifuges etc., are getting connected to Internet based services at an exponentially growing pace. This is happening in several domains, ranging from industrial manufacturing, automobiles, and semiconductor foundries to banking and homes. The benefits of connecting the devices to Internet based services is immense, allowing for dynamic updates to software and firmware, sharing of insights gained from different devices, the ability to mine the data for insights into operational efficiency, quick trouble-shooting and improved productivity. However, as more and more of these devices are getting connected, the risks associated with Internet based black hat attackers gaining access to these devices, and causing irreparable damage is also increasing. As these devices are being accessed from the Internet, they need to be safeguarded. The accesses being provided to them must not cause a security risk, for example, being compromised and used in botnets <ref type="bibr" target="#b0">[1]</ref>, or even worse a safety risk. When safety is at risk, e.g. in an emergency situation, security norms may need to be violated. Static access control, which allows for restricted access to services from users on the Internet is inadequate for the task at hand. The person accessing the service from the Internet can steal credentials and masquerade as an authorized user. The IoT system which is being accessed must be able to protect itself when given dangerous commands over the Internet. This determination needs to be dynamic and based on the current context in which the device is being used. A simple and innocuous command, e.g., asking an automobile to accelerate from a service that appears to be from the manufacturer of the automobile, may be perfectly fine if the car is parked imperfectly in a parking lot, but would be dangerous if that causes the car to hit something in front of it, and is being sent by a hacker.</p><p>An illustrative example of the access control that an IoT device needs to enforce is shown in Figure <ref type="figure" target="#fig_3">4</ref>. An automobile is being operated by a rental car company and is currently rented out to a driver. The automobile is connected via a cellular network to the Internet, and interacts with: (a) a tracking service run by rental company; (b) a maintenance and diagnostic service run by the maker of the car; (c) a maintenance and diagnostic service run by the supplier of the car; and, (d) an independent service that provides emergency assistance for which the renter has a subscription. Since the cellular network provider can change across different regions within which the car is driven, the car needs its own protection service.</p><p>Each of the services is allowed its own set of data restrictions which can change over time. The tracking service may be allowed access to the location of the car when the car is not rented out, but the tracking of an individual renter location when the car is rented out is prohibited. Each of the subcontractors who provided material to the car may be running a service, but they are only allowed access to some of the services within the car. Furthermore, the diagnostics that are permitted on the car have to be performed when the car is not being driven. Access control to car functions for services that need subscription from the renter needs to be added dynamically.</p><p>Furthermore, any requests to control the car from any of the service providers over the Internet needs to be validated to see that: (a) they are indeed from a valid service and not a hacker on the Internet; and, (b) they are permissible under the current context that the car is operating in. Similarly, any request going out from the car needs to be checked to ensure that: (a) it is going to one of the Blue Sky Session: Next Generation Security Services for Emerging Networks SACMAT'18, June 13-15, 2018, Indianapolis, IN, USA authorized services relevant to the car; (b) it is not leaking sensitive information about the current user of the car; and, (c) is not due to the car being used for malicious purposes such as becoming part of a botnet. All these decisions vary over time depending on the rental status, the car location, and the condition of the automobile and its components.</p><p>Because of the dynamic nature of the access required, the car needs to be able to decide for itself which accesses are allowed, and which ones are not. The car is in the best position to assess its state, decide whether the requests coming from the Internet are worth addressing, and thus protect itself. Interactions with other cars in the neighborhood may also play a role in the decisions made by a single car.</p><p>In addition to the car, similar dynamic access control concerns may arise in many other IoT environments. Wearable health-care systems worn by a patient and the health-care providers may need to interact together, and each interaction may require adjustment in access control rules. In <ref type="bibr" target="#b4">[5]</ref>, a system which generates new access control rules when new devices are encountered is described. While they do not change access control rules, an environment in which people leave hospital premises would also require modification and changes in the access control rules.</p><p>The key requirement for access control as shown by these scenarios is that the right access control is very dependent on the context in which a request is being made. The same access request (i.e., from the same subject to the same resource) may be safe (or desirable) to grant in some conditions, while it may be undesirable to grant in other conditions. The resource being accessed is usually in the best position to determine whether the request should be allowed, and we need to develop access control mechanisms by which the resources themselves are able to decide whether a subject access request should be granted. We refer to these types of access control requests as dynamic access control approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DYNAMIC ACCESS CONTROL APPROACHES</head><p>The previous section argued that we need to enhance static access control models, including role-based access control and more recent attribute-based access control, to deal with more dynamic scenarios.</p><p>In this section, we present some potential approaches for a dynamic access control which depends on the local context. In order to do so, we introduce the abstraction of a device, which is a collection of resources and subjects. The devices can host subjects that can access resources on the same or on other devices. One way to understand the concept of the device is to consider each device as a collection of long running services. Each service can invoke other services, acting both as subjects as well as resources. Our end goal is to have each device be capable of determining the access control policies for its resources depending on the context in which the device finds itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Dynamic Refinement from Environment Specification</head><p>One approach to allow devices to generate their own access control policies is to provide them with a description of the environment in which they are operating, giving them a high-level guidance on how they ought to operate as regards to providing access control to other entities in the system. As an example, a manager can provide devices with information about other types of devices that are found in the system, and mechanisms to validate the new devices entering the system. The devices could then discover other devices in the system, and then decide to give them access on the basis of the restrictions provided by the manager, and also based on information about the devices (such as type of device <ref type="bibr" target="#b17">[18]</ref>, and organization or user owning the device).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Access Control Policies</head><note type="other">Environment Description Resource Performs Policy Constraints Discovery Refinement Manager Provides</note><p>The concept of dynamic refinement is schematically described in Figure <ref type="figure" target="#fig_4">5</ref>. A set of guidelines from a management system provides each resource with a description of the environment in which it could expect to operate. This description would include the other types of subjects and resources it should expect to encounter during operation, and the properties expected of those other types of subjects/resources. Each device would also have a discovery process which would allow it to discover other entities in the system, both the other types of subjects, and other resources that are present in the environment. During the discovery process, resources may share accesses made by different subjects and thus maintain a distributed log of accesses that are made.</p><p>Each resource would also be provided with a set of constraints on the type of access control policies that they should explore. These constraints could be used to check the validity of the policies that the resource uses for its operation, some examples being a policy generation grammar, or a template for policies. The resource uses a refinement process to translate the constraints into a set of access control policies, which can then be used on a per request basis to determine access. The policies could be regenerated either periodically, or when a specific event happens, e.g., new subjects or resources are discovered in the environment. As the policies are regenerated, the high-level constraints are mapped (refined) into a part of the access control matrix with the currently discovered set of subjects, resources, their attributes and/or roles, and the history of the previous requests. The high level constraints may be defined in a teleo-reactive manner <ref type="bibr" target="#b4">[5]</ref>. Such a system is described in <ref type="bibr" target="#b20">[21]</ref>, in which the manager defines the roles that devices may play within a large group, and provides each device with an interaction graph with the different roles in the system. The devices act as subjects for accessing services present on Blue Sky Session: Next Generation Security Services for Emerging Networks SACMAT'18, June 13-15, 2018, Indianapolis, IN, USA other devices, with the services playing the role of resources. Each device is also provided with a template that allows it to generate access control policies based on the roles assigned to a new system. The combination of the three techniques, namely: (a) defining an interaction graph among different roles; (b) providing a way for devices to discover other devices in the environment and validate their roles; and, (c) providing each device with a mechanism to generate policies, e.g., a policy template or a policy generation grammar, allows devices the ability to generate access control policies in a dynamic manner.</p><p>Such dynamic refinement allows devices to generate their own policies in scenarios where the set of other subjects/resources in the environment fall into a few broad classes with known relationships among them, and the set of specific subjects/resources can be easily discovered. Examining the various scenarios presented in Section 2, the scenarios for dynamic data centers and coalition resource sharing can be supported well by dynamic refinement approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Device Model based Access Control</head><p>Another approach for devices to determine their own access control is to provide them with a model of how their safety would be impacted if they were to allow any operation to be executed on them. For example, use of computation intensive services may deplete the energy resources of a device making it unable to answer some critical requests. The devices can use such a model to determine whether or not they should allow access to any resource or service that is being requested of them.</p><p>If we consider each resource as a collection of services, to which requests are being made by an external entity, the access control problem can be seen as a go/no-go decision on every attempt by the external entity to access a specific service. If the device has a model that determines whether the result of that particular service invocation would be safe or unsafe for that device, it can use that model to determine whether or not that access ought to be allowed.</p><p>The approach is described in Figure <ref type="figure" target="#fig_5">6</ref>, where the device model is used to assess the validity of each request. On each request, the model of the device is used to understand the impact of approving for the requesting subject to access the requested resource. The device determines its state by reading its own sensors (including the status of the resources present on the device, and any prior history of requests from other subjects) and executes the model to assess the impact of the request. The assessment can be done by means of the digital twin paradigm <ref type="bibr" target="#b9">[10]</ref>, in which the device performs a simulation to understand the impact of the request.</p><p>As an example, if we consider that physical devices have a specific model that can map any state they have into a safe/unsafe classification, then every request can be run through a simulation of the model to determine whether the result of that service invocation is safe or not. Some of the simulations may be run when a device is put into operation, resulting in a static set of access control policies. Other types of requests would be done in a dynamic manner when a new request is received, and the resulting new state computed for the device as a function of the current state and the new request. This allows for a dynamic generation of the access control rules on a per-request basis. It is important to notice that such an approach is also critical for devices that are actuators and thus can execute actions that may impact the physical environment and thus undermine safety. Furthermore, since simulations of the systems can be time-consuming, the devices may choose to run simulations periodically to generate a set of access control policies which can be used as a faster way to do the determination of access on a per request basis. For access control decisions which can be modeled well, and the focus of securing access is on a specific device, model based access control can be very useful. It can be used effectively for physical safety of client-side IoT devices and be a building block for assuring safety, partner information access, and coalition resource sharing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Access Control Decision</head><note type="other">Device Model Resource Performs Status Determination Model Execution Manager Provides Request</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Networked Environment Model driven Access Control</head><p>While the previous subsection has discussed the model of individual devices, many security scenarios may involve considering the state of the other devices that are in the environment as well. The safety of a device may depend not just on its own state, but on the state of other devices in the environment. In addition, when dealing with a networked system of devices, many of which have actuation capabilities, assuring safety becomes even more challenging as the safety analysis becomes more complex as one must collectively consider the combined effects of several actions, each of which when executed alone is safe but when combined may introduce safety risks. At a high level this system would work as shown in Figure <ref type="figure" target="#fig_6">7</ref>. The manager provides an environment description to the device, and also provides models for understanding the behavior of each device. The device runs a discovery process which allows it to determine the set of other devices that are present in the system. The model execution phase performs the simulation after reading the status of all the devices in the system, and the simulation would consider the impact of all the devices in order to determine its final go/no-go decision.</p><p>As an example, if a building cooling system and a building heating system are controlled by independent controls, it is possible to launch an attack on the system by setting them both to run continuously, asking the cooling system to maintain a temperature below a threshold and asking the heating system to maintain a temperature  above that threshold. On the other hand, if the devices have a way to discover other systems in the environment and their state, they could determine that a request made in this manner could lead to an unsafe situation and one or the other could adjust their settings to avoid running continuously. Therefore, in such context the devices must coordinate their access control decisions, rather than taking these decisions independently. Thus, some form of coordinated access control is required <ref type="bibr" target="#b19">[20]</ref>, combined with models of the devices and their deployment environments.</p><p>Networked environment models can be used to secure scenarios like car navigation systems and client side IoT security. They can also be used to provide dynamic access control for scenarios that use dynamic refinement such as elastic data centers and coalition resource sharing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Machine Learning based Access Control</head><p>Whenever a model needs to be deployed, its specification and construction can be a difficult and tedious task. In some environments, models can be automatically built for the devices using machine learning techniques. In these cases, an initial specification could define the safe and unsafe state of devices to the best possible ability of a human. As the system operates in live environments, its state variables are recorded and the impact of any service request on the state variables also recorded. The system could then build the model for the device based on its actual operation.</p><p>Machine learning can also be used to characterize the behavior of external entities who are using the system. External entities which are using the system frequently with benign impact can be allowed access to the system. Such access has to be balanced against the threat of someone launching a reputation-based attack on the system. Similarly, entities which are present/endorsed by such an entity can be provided access. However, an unknown entity would be denied access to the system, unless it is in the presence of a known entity.</p><p>The machine learning aspect can be added to all three of the previous approaches described in this section. The machine learning algorithms can be used as the mechanism to refine the policy constraints into a set of access control policies or be used to make the determination on a request by request basis <ref type="bibr" target="#b16">[17]</ref>. In the specific scenario of the car navigation system, a machine learning based system can recognize the faces of people who are present frequently with the driver in the car and provide them access to all required information. An unknown entity that tries to operate the car with the company of a known entity is also provided access. However, a completely unknown entity can be refused access to car navigation systems. Dynamic learning of entities using machine learning can provide a much better approach to handle access control policy generation than the other approaches discussed above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Sharing of Models</head><p>While machine learning allows the ability for devices to determine their own models, it would provide a greater flexibility if devices could share the models that they have learnt with each other. This sharing of knowledge on how to determine policies in general has been introduced in <ref type="bibr" target="#b3">[4]</ref> and can be used to further improve dynamic access control policy determination.</p><p>Devices in this model act like a community of managers of other devices. By contrast, in all previous approaches a (human) manager is typically responsible for providing some information to the devices. The devices can use that information to dynamically update any models that they have received. In a model sharing approach, instead, each device gets models from its peers and can update them locally -so the peer group is acting like several managers feeding models to each other.</p><p>One a device has updated its model, it can share the updated model and the conditions under which the updated model is best suited. Each device can use the set of models shared with it to determine if it should use the new model, the original model provided to it, or the model it has learned, the choice dependent on the conditions that accompany each model.</p><p>While the manager-provided original model would be the default mode of operation, such sharing of conditions and models would allow the devices to quicken the pace at which new models are created in the system. Models built on machine learning approaches could take a significant amount of time to be created -until sufficient data has been observed. The sharing of models allows the learning process to become much faster and efficient.</p><p>As with the machine learning approach, the model sharing approach can be used in conjunction with any of the three earlier approaches that were described.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESEARCH CHALLENGES</head><p>We can generalize the various approaches for resources to generate their own access control policies described in Section 3 into an abstract one. In this abstract approach, each of the resources is provided some "high-level guidance" from a system manager; the resources then conduct a "discovery process" to determine their "situational context" of operation and generate their access control policies using some type of "learning" approach.</p><p>In order to enable the resources to learn their own access policies, several research challenges need to be addressed. Some of these challenges include:</p><p>(1) Defining the right "high-level guidance": Access control policies were introduced as the general approach for simplifying the application of access control mechanisms to a divergent set of use-cases. We need to define a similar concept for "high level guidance" which will be applicable to various scenarios and contexts in a general way. The semantics to be used for high-level guidance needs to be defined. While that semantics can be defined for each of the different generation approaches discussed in Section 3, an open challenge remains that of identifying the abstraction that will create the concept of the "high level guidance" that will be applicable to a broad set of use-case scenarios regardless of the approach used to generate policies. (2) Defining the right discovery process: Generating the right access control policy requires each of the resources in the environment to be aware of the other devices in the environment. Given the lack of widely adopted standards for discovery of resources, and the many security exposures that may result from a flawed discovery process, new discovery techniques that can provide sufficient security in many dynamic contexts are needed. (3) Determining the situational context: The definition of the situational context, as well as its determination, remains a hard and open research challenge. Access control needs to account for not only the other resources that any given resource interacts with, but also for the resources that may indirectly use the information provided by that resource.</p><p>Understanding the situation on the ground in sufficient detail to provide workable security is a challenge that can be solved on a case-by-case basis, but a general formulation remains an open challenge. (4) Policy deconfliction without human guidance: When access control policies are generated by the resources, they may conflict among themselves, or with other policies that are imposed on the system to meet other requirements, such as performance, reliability or availability requirements. In the presence of a human, such conflicts can be resolved and deconflicted using the human provided input. Similar algorithms, which can operate without a human in the loop, need to be developed. (5) Controlling emergent behavior: When resources create their own policies, there is a danger of uncontrolled emergent behavior <ref type="bibr" target="#b14">[15]</ref>. Emergent behavior is behavior shown by a collection of systems which was not originally designed but happens due to the dynamic interactions among different intelligent systems. Such emergent behavior can be controlled, but the design needs to account for that. The control of emergent behavior in complete generality remains an open challenge, but there may be solutions that can be developed for specific domain of access control. (6) Learning-related challenges: The approach used by resources to learn their access control policy has to use some type of learning approach, which creates a generalization based on its past experiences, but such learning mechanism has its challenges. The set of experiences for access control in each use-case has only a few small data points to draw from, which means that either existing learning techniques that use only a few data points need to be used, or new learning techniques requiring small data for training needs to be created. Learning also exposes new threats, e.g., a malicious actor may manipulate the data so as to force the device to learn an invalid model which could lead to generation of insecure access control policies. Solutions to such adversarial learning in uncontrolled environments need to be developed. <ref type="bibr" target="#b6">(7)</ref> Increase in attack surface. The increase in complexity due to autonomous generation of policies by devices can lead to new types of security vulnerabilities and threats, e.g. the adversarial learning example given above. This could lead to challenges with established assurance processes in enterprise and government networks, and the right way to provide assurance for systems using dynamically generated access control policies need to be developed. (8) Power, computation and communication efficiency. While in the past several years there have been tremendous advantages in the computational capacity of small devices, devices that need to learn and manage their own policies may find themselves unable to use approaches that require specialized hardware, or significant computational power, e.g. learning mechanisms based on deep neural networks. For any solution developed with dynamic access control policies, system design should incorporate mechanisms that take into account the limitations on a resource, which usually manifests itself as limited amount of battery power, computational capacity or the ability to communicate at high bandwidth rates.</p><p>A more general discussion on research challenges associated with devices that try to generate their security policies in a broader context can be found in <ref type="bibr" target="#b15">[16]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISCUSSION</head><p>In this paper, we have looked at different scenarios that require a dynamic approach for access control, and require devices to generate their own policies, usually based on the context in which they are operating. The devices may operate under the constraints provided by a management system, or they may use models provided by a management system to determine their own access control policies. They can also use machine learning to learn their own models or improve upon the model that is provided to them by a machine learning system. Also access control mechanisms need to be tightly coupled with authentication systems so that access control can also be based on trusted information about the identity and the properties of the entities requiring access to devices.</p><p>Of the approaches discussed in this paper, the approach for dynamic refinement is closest to the current approaches for access control management. It can be viewed as an adaptation of role-based access control for dynamically formed groups that have a welldefined discovery process. Model based approaches provide more flexibility in the access control generation but face the challenge that a good model should accompany each device. The approach to use machine learning to learn the models for devices, and have the system determine its model and context is the most flexible option among all of them. Sharing the learned models among different devices can further improve the ability of devices to dynamically determine their context. We believe that each of these approaches holds immense promise for improving access control for future systems and can be built upon to show their effectiveness in more details in several scenarios.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Partner Information Access Scenario</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>3 Figure 2 :</head><label>32</label><figDesc>Figure 2: Elastic Data Center</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: A Community of Interest</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Client Side IoT Security Scenario</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Dynamic Policy Refinement</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Model based Access Control</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7: Networked Environment Model</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Blue Sky Session: Next Generation Security Services for Emerging Networks SACMAT'18, June 13-15, 2018, Indianapolis, IN, USA</figDesc><table><row><cell>From Partner A</cell><cell>From Partner B</cell><cell>From Partner C</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Blue Sky Session: Next Generation Security Services for Emerging Networks SACMAT'18, June 13-15, 2018, Indianapolis, IN, USA</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">SACMAT'18, June 13-15, 2018, Indianapolis, IN, USA</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Botnets and Internet of Things Security</title>
		<author>
			<persName><forename type="first">Elisa</forename><surname>Bertino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nayeem</forename><surname>Islam</surname></persName>
		</author>
		<idno type="DOI">10.1109/mc.2017.62</idno>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<title level="j" type="abbrev">Computer</title>
		<idno type="ISSN">0018-9162</idno>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="76" to="79" />
			<date type="published" when="2017-02" />
			<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">TRBAC</title>
		<author>
			<persName><forename type="first">Elisa</forename><surname>Bertino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Piero</forename><forename type="middle">Andrea</forename><surname>Bonatti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elena</forename><surname>Ferrari</surname></persName>
		</author>
		<idno type="DOI">10.1145/501978.501979</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Information and System Security</title>
		<title level="j" type="abbrev">ACM Trans. Inf. Syst. Secur.</title>
		<idno type="ISSN">1094-9224</idno>
		<idno type="ISSNe">1557-7406</idno>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="191" to="233" />
			<date type="published" when="2001-08" />
			<publisher>Association for Computing Machinery (ACM)</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Prox-RBAC</title>
		<author>
			<persName><forename type="first">Michael</forename><forename type="middle">S</forename><surname>Kirkpatrick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maria</forename><forename type="middle">Luisa</forename><surname>Damiani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elisa</forename><surname>Bertino</surname></persName>
		</author>
		<idno type="DOI">10.1145/2093973.2094018</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems - GIS &apos;11</title>
				<meeting>the 19th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems - GIS &apos;11</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Community-based self generation of policies and processes for assets: Concepts and research directions</title>
		<author>
			<persName><forename type="first">Elisa</forename><surname>Bertino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Geeth</forename><surname>De Mel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alessandra</forename><surname>Russo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Seraphin</forename><surname>Calo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dinesh</forename><surname>Verma</surname></persName>
		</author>
		<idno type="DOI">10.1109/bigdata.2017.8258265</idno>
	</analytic>
	<monogr>
		<title level="m">2017 IEEE International Conference on Big Data (Big Data)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017-12" />
			<biblScope unit="page" from="2961" to="2969" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Teleo-Reactive policies for managing human-centric pervasive services</title>
		<author>
			<persName><forename type="first">Srdjan</forename><surname>Marinovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kevin</forename><surname>Twidle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Naranker</forename><surname>Dulay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Morris</forename><surname>Sloman</surname></persName>
		</author>
		<idno type="DOI">10.1109/cnsm.2010.5691332</idno>
	</analytic>
	<monogr>
		<title level="m">2010 International Conference on Network and Service Management</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010-10" />
			<biblScope unit="page" from="80" to="87" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Resonance</title>
		<author>
			<persName><forename type="first">Ankur</forename><forename type="middle">Kumar</forename><surname>Nayak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Reimers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nick</forename><surname>Feamster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Russ</forename><surname>Clark</surname></persName>
		</author>
		<idno type="DOI">10.1145/1592681.1592684</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st ACM workshop on Research on enterprise networking - WREN &apos;09</title>
				<meeting>the 1st ACM workshop on Research on enterprise networking - WREN &apos;09</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="11" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Role-based access control models</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Sandhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">J</forename><surname>Coyne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">L</forename><surname>Feinstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">E</forename><surname>Youman</surname></persName>
		</author>
		<idno type="DOI">10.1109/2.485845</idno>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<title level="j" type="abbrev">Computer</title>
		<idno type="ISSN">0018-9162</idno>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="38" to="47" />
			<date type="published" when="1996" />
			<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Model checking usage policies</title>
		<author>
			<persName><forename type="first">Massimo</forename><surname>Bartoletti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pierpaolo</forename><surname>Degano</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gian</forename><forename type="middle">Luigi</forename><surname>Ferrari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roberto</forename><surname>Zunino</surname></persName>
		</author>
		<idno type="DOI">10.1017/s096012951200093x</idno>
	</analytic>
	<monogr>
		<title level="j">Mathematical Structures in Computer Science</title>
		<title level="j" type="abbrev">Math. Struct. Comp. Sci.</title>
		<idno type="ISSN">0960-1295</idno>
		<idno type="ISSNe">1469-8072</idno>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="710" to="763" />
			<date type="published" when="2014-11-10" />
			<publisher>Cambridge University Press (CUP)</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An Examination of Federal and Commercial Access Control Policy Needs</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gilbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of National Computer Security Conference on Information Systems Security</title>
				<meeting>National Computer Security Conference on Information Systems Security</meeting>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Digital Twin: Mitigating Unpredictable, Undesirable Emergent Behavior in Complex Systems</title>
		<author>
			<persName><forename type="first">Michael</forename><surname>Grieves</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Vickers</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-38756-7_4</idno>
	</analytic>
	<monogr>
		<title level="m">Transdisciplinary Perspectives on Complex Systems</title>
				<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2016-08-17" />
			<biblScope unit="page" from="85" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">dRBAC: distributed role-based access control for dynamic coalition environments</title>
		<author>
			<persName><forename type="first">E</forename><surname>Freudenthal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Pesin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Port</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Keenan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Karamcheti</surname></persName>
		</author>
		<idno type="DOI">10.1109/icdcs.2002.1022279</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings 22nd International Conference on Distributed Computing Systems</title>
				<meeting>22nd International Conference on Distributed Computing Systems</meeting>
		<imprint>
			<publisher>IEEE Comput. Soc</publisher>
			<date>2002</date>
			<biblScope unit="page" from="411" to="420" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Dynamic access control through Petri net workflows</title>
		<author>
			<persName><forename type="first">K</forename><surname>Knorr</surname></persName>
		</author>
		<idno type="DOI">10.1109/acsac.2000.898869</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings 16th Annual Computer Security Applications Conference (ACSAC&apos;00)</title>
				<meeting>16th Annual Computer Security Applications Conference (ACSAC&apos;00)</meeting>
		<imprint>
			<publisher>IEEE Comput. Soc</publisher>
			<date>2000</date>
			<biblScope unit="page" from="159" to="167" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Attribute-Based Access Control</title>
		<author>
			<persName><forename type="first">Vincent</forename><forename type="middle">C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">Richard</forename><surname>Kuhn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">F</forename><surname>Ferraiolo</surname></persName>
		</author>
		<idno type="DOI">10.1109/mc.2015.33</idno>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<title level="j" type="abbrev">Computer</title>
		<idno type="ISSN">0018-9162</idno>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="85" to="88" />
			<date type="published" when="2015-02" />
			<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Hierarchical attribute-based encryption for fine-grained access control in cloud storage services</title>
		<author>
			<persName><forename type="first">Guojun</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Qin</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jie</forename><surname>Wu</surname></persName>
		</author>
		<idno type="DOI">10.1145/1866307.1866414</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th ACM conference on Computer and communications security - CCS &apos;10</title>
				<meeting>the 17th ACM conference on Computer and communications security - CCS &apos;10</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="735" to="737" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Designing Emergent Behaviors: From Local Interactions to Collective Intelligence</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mataric</surname></persName>
		</author>
		<idno type="DOI">10.7551/mitpress/3116.003.0059</idno>
	</analytic>
	<monogr>
		<title level="m">From Animals to Animats 2</title>
				<imprint>
			<publisher>The MIT Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="432" to="441" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Research challenges in dynamic policy-based autonomous security</title>
		<author>
			<persName><forename type="first">Seraphin</forename><surname>Calo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emil</forename><surname>Lupu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elisa</forename><surname>Bertino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Saritha</forename><surname>Arunkumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gregory</forename><surname>Cirincione</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brian</forename><surname>Rivera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alan</forename><surname>Cullen</surname></persName>
		</author>
		<idno type="DOI">10.1109/bigdata.2017.8258266</idno>
	</analytic>
	<monogr>
		<title level="m">2017 IEEE International Conference on Big Data (Big Data)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017-12" />
			<biblScope unit="page" from="2970" to="2973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Automating role-based provisioning by learning from examples</title>
		<author>
			<persName><forename type="first">Qun</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jorge</forename><surname>Lobo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Seraphin</forename><surname>Calo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pankaj</forename><surname>Rohatgi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elisa</forename><surname>Bertino</surname></persName>
		</author>
		<idno type="DOI">10.1145/1542207.1542222</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th ACM symposium on Access control models and technologies - SACMAT &apos;09</title>
				<meeting>the 14th ACM symposium on Access control models and technologies - SACMAT &apos;09</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="75" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">IoT SENTINEL: Automated Device-Type Identification for Security Enforcement in IoT</title>
		<author>
			<persName><forename type="first">Markus</forename><surname>Miettinen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Samuel</forename><surname>Marchal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ibbad</forename><surname>Hafeez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Asokan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ahmad-Reza</forename><surname>Sadeghi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sasu</forename><surname>Tarkoma</surname></persName>
		</author>
		<idno type="DOI">10.1109/icdcs.2017.283</idno>
	</analytic>
	<monogr>
		<title level="m">2017 IEEE 37th International Conference on Distributed Computing Systems (ICDCS)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017-06" />
			<biblScope unit="page" from="2177" to="2184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Access control: principle and practice</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Sandhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Samarati</surname></persName>
		</author>
		<idno type="DOI">10.1109/35.312842</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<title level="j" type="abbrev">IEEE Commun. Mag.</title>
		<idno type="ISSN">0163-6804</idno>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="40" to="48" />
			<date type="published" when="1994-09" />
			<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Collective privacy management in social networks</title>
		<author>
			<persName><forename type="first">Anna</forename><forename type="middle">Cinzia</forename><surname>Squicciarini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohamed</forename><surname>Shehab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Federica</forename><surname>Paci</surname></persName>
		</author>
		<idno type="DOI">10.1145/1526709.1526780</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th international conference on World wide web - WWW &apos;09</title>
				<meeting>the 18th international conference on World wide web - WWW &apos;09</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="521" to="530" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Generative policy model for autonomic management</title>
		<author>
			<persName><forename type="first">D</forename><surname>Verma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Calo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Chakraborty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Bertino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Rivera</surname></persName>
		</author>
		<idno type="DOI">10.1109/uic-atc.2017.8397410</idno>
	</analytic>
	<monogr>
		<title level="m">2017 IEEE SmartWorld, Ubiquitous Intelligence &amp; Computing, Advanced &amp; Trusted Computed, Scalable Computing &amp; Communications, Cloud &amp; Big Data Computing, Internet of People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2017-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">OPERATIONAL MANAGEMENT OF SECURITY</title>
		<idno type="DOI">10.1002/9781118741580.ch5</idno>
	</analytic>
	<monogr>
		<title level="m">Security Management of Next Generation Telecommunications Networks and Services</title>
				<meeting><address><addrLine>Indianapolis, IN, USA</addrLine></address></meeting>
		<imprint>
			<publisher>John Wiley &amp; Sons, Inc</publisher>
			<date type="published" when="2013-10-25" />
			<biblScope unit="page" from="277" to="317" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
